<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_element_1_1_loop" kind="class" language="C#" prot="public">
    <compoundname>Element::Loop</compoundname>
    <basecompoundref refid="class_element_1_1_instruction_group" prot="public" virt="non-virtual">Element.InstructionGroup</basecompoundref>
    <innerclass refid="class_element_1_1_loop_1_1_dummy_instruction" prot="private">Element::Loop::DummyInstruction</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_element_1_1_loop_1a3589d07b41c023e5d4e13fd10e3ffd9f" prot="public" static="no" mutable="no">
        <type>override int</type>
        <definition>override int Element.Loop.Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <initializer>=&gt; State.Count</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="14" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_element_1_1_loop_1a72221e292f4314fef6e4d05fe246f352" prot="public" static="no" mutable="no">
        <type>override IEnumerable&lt; <ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref> &gt;</type>
        <definition>override IEnumerable&lt;Instruction&gt; Element.Loop.Dependent</definition>
        <argsstring></argsstring>
        <name>Dependent</name>
        <initializer>=&gt; State.Concat(Body).Concat(new[] {Condition})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="114" column="29" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_element_1_1_loop_1ae057678eb104ef2a8a3e1238965c51b3" prot="public" static="no" mutable="no">
        <type>override string</type>
        <definition>override string Element.Loop.SummaryString</definition>
        <argsstring></argsstring>
        <name>SummaryString</name>
        <initializer>=&gt; $&quot;Loop({StateListJoin(<ref refid="class_element_1_1_state" kindref="compound">State</ref>)}; {Condition}; {ListJoinToString(Body)})&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="116" column="24" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_element_1_1_loop_1acb7f0975dfdf4ff76687c55cd2dcdc7b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ReadOnlyCollection&lt; <ref refid="class_element_1_1_state" kindref="compound">State</ref> &gt;</type>
        <definition>ReadOnlyCollection&lt;State&gt; Element.Loop.State</definition>
        <argsstring></argsstring>
        <name>State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="15" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="property" id="class_element_1_1_loop_1a88b654041beee15e81d39945a91eab18" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref></type>
        <definition>Instruction Element.Loop.Condition</definition>
        <argsstring></argsstring>
        <name>Condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="16" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="property" id="class_element_1_1_loop_1a4050f511f14cf767da64b12b05828397" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ReadOnlyCollection&lt; <ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref> &gt;</type>
        <definition>ReadOnlyCollection&lt;Instruction&gt; Element.Loop.Body</definition>
        <argsstring></argsstring>
        <name>Body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="17" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="17" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_element_1_1_loop_1a96cdc6857174d9d24b59975853f537dc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ReadOnlyCollection&lt; <ref refid="class_element_1_1_state" kindref="compound">State</ref> &gt;</type>
        <definition>static ReadOnlyCollection&lt;State&gt; Element.Loop.ToState</definition>
        <argsstring>(IEnumerable&lt; Instruction &gt; exprs)</argsstring>
        <name>ToState</name>
        <param>
          <type>IEnumerable&lt; <ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref> &gt;</type>
          <declname>exprs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="26" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_element_1_1_loop_1a2688119881f63ee21200f107e72c9263" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="class_element_1_1_instruction_group" kindref="compound">InstructionGroup</ref> &gt;</type>
        <definition>static Result&lt;InstructionGroup&gt; Element.Loop.CreateAndOptimize</definition>
        <argsstring>(IReadOnlyCollection&lt; Instruction &gt; initialSerialized, ConditionFunction conditionFunc, IterationFunction bodyFunc, Context context)</argsstring>
        <name>CreateAndOptimize</name>
        <param>
          <type>IReadOnlyCollection&lt; <ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref> &gt;</type>
          <declname>initialSerialized</declname>
        </param>
        <param>
          <type>ConditionFunction</type>
          <declname>conditionFunc</declname>
        </param>
        <param>
          <type>IterationFunction</type>
          <declname>bodyFunc</declname>
        </param>
        <param>
          <type><ref refid="class_element_1_1_context" kindref="compound">Context</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="28" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_element_1_1_loop_1ac03c31db40c2b34571d573551b8dfdad" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Element.Loop.Loop</definition>
        <argsstring>(ReadOnlyCollection&lt; State &gt; state, Instruction condition, ReadOnlyCollection&lt; Instruction &gt; body)</argsstring>
        <name>Loop</name>
        <param>
          <type>ReadOnlyCollection&lt; <ref refid="class_element_1_1_state" kindref="compound">State</ref> &gt;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref></type>
          <declname>condition</declname>
        </param>
        <param>
          <type>ReadOnlyCollection&lt; <ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref> &gt;</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="107" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="107" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A group representing repeated iteration until a condition is not satisfied. Each iteration is a group item. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>IValue</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_value"/>
      </node>
      <node id="3">
        <label>Instruction</label>
        <link refid="class_element_1_1_instruction"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>InstructionGroup</label>
        <link refid="class_element_1_1_instruction_group"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Element.Loop</label>
        <link refid="class_element_1_1_loop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Value</label>
        <link refid="class_element_1_1_a_s_t_1_1_value"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>IEquatable&lt; Instruction &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Element.AST.IValue</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_value"/>
      </node>
      <node id="5">
        <label>IValue</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_value"/>
      </node>
      <node id="8">
        <label>Element.AST.IIntrinsicStructImplementation</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_struct_implementation"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Instruction</label>
        <link refid="class_element_1_1_instruction"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>StructImplementation</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>InstructionGroup</label>
        <link refid="class_element_1_1_instruction_group"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Element.Loop</label>
        <link refid="class_element_1_1_loop"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>IIntrinsicImplementation</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_implementation"/>
      </node>
      <node id="4">
        <label>Value</label>
        <link refid="class_element_1_1_a_s_t_1_1_value"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ReturnConstraint</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>IEquatable&lt; Instruction &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" line="13" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!3-Instructions/ExpressionGroup/Loop.cs" bodystart="12" bodyend="118"/>
    <listofallmembers>
      <member refid="class_element_1_1_instruction_1a3432d656a9a58e31341593d1cc240509" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>AllDependent</name></member>
      <member refid="class_element_1_1_loop_1a4050f511f14cf767da64b12b05828397" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Body</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1a8fbc4468318627c22f0d62c22e57dc46" prot="public" virt="virtual"><scope>Element::Loop</scope><name>Call</name></member>
      <member refid="class_element_1_1_loop_1a88b654041beee15e81d39945a91eab18" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Condition</name></member>
      <member refid="class_element_1_1_instruction_1aee5ec53353dc4a92225f286084fa89d7" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>CountUses</name></member>
      <member refid="class_element_1_1_loop_1a2688119881f63ee21200f107e72c9263" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>CreateAndOptimize</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1a167edf6225149bcf56bfab7ab6094904" prot="public" virt="virtual"><scope>Element::Loop</scope><name>DefaultValue</name></member>
      <member refid="class_element_1_1_loop_1a72221e292f4314fef6e4d05fe246f352" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Dependent</name></member>
      <member refid="class_element_1_1_instruction_1a27ee04a4c394e8507e3818d20f4eb27b" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Deserialize</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1a6a9a53f7cd08cecd896edaa1ee6d84fb" prot="public" virt="virtual" ambiguityscope="Element::AST::Value."><scope>Element::Loop</scope><name>Deserialize</name></member>
      <member refid="class_element_1_1_instruction_1a8083175845c97edcca3884618a39554d" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Equals</name></member>
      <member refid="class_element_1_1_instruction_1a35f95bfd828cd266cb1e32631e9ae5ef" prot="public" virt="virtual"><scope>Element::Loop</scope><name>Equals</name></member>
      <member refid="class_element_1_1_instruction_1a4bf53b48647a17b2fa2d908f9a079a62" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>GetHashCode</name></member>
      <member refid="class_element_1_1_instruction_1a4d2256b835fdae629b97aed2f21d48eb" prot="public" virt="virtual"><scope>Element::Loop</scope><name>Index</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1ac3be9fa21309cd961a11fc67e4fe39af" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>InputPorts</name></member>
      <member refid="class_element_1_1_instruction_1a436dd31eb46f399166a0d0a5fb46e6c8" prot="protected" virt="non-virtual"><scope>Element::Loop</scope><name>Instruction</name></member>
      <member refid="class_element_1_1_instruction_1a36f1ae7ef150a6eb28c4f7b8b62ca4b9" prot="protected" virt="non-virtual"><scope>Element::Loop</scope><name>ListJoinNormalizedForm</name></member>
      <member refid="class_element_1_1_instruction_1a0a8a3f6fbd0cbfc4b6e91eedc9bebdcd" prot="protected" virt="non-virtual"><scope>Element::Loop</scope><name>ListJoinToString</name></member>
      <member refid="class_element_1_1_loop_1ac03c31db40c2b34571d573551b8dfdad" prot="private" virt="non-virtual"><scope>Element::Loop</scope><name>Loop</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1a0b9fdb28fdbea2fe585c2a42c8f1ecf4" prot="public" virt="virtual"><scope>Element::Loop</scope><name>MatchesConstraint</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1aa915c4b86008b2785621f5e48b5b53d1" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Members</name></member>
      <member refid="class_element_1_1_instruction_1a6dbc8b32154aa10f30375628ba954eef" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>NormalizedFormString</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1aaf9449e5d86cceb21ff322b52f97e01f" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>ReturnConstraint</name></member>
      <member refid="class_element_1_1_instruction_1a8f53d61c6e1ec3eca7456b5c7572d496" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Serialize</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1ad0bc6438a64280a0a1558ed23cdb210b" prot="public" virt="virtual" ambiguityscope="Element::AST::Value."><scope>Element::Loop</scope><name>Serialize</name></member>
      <member refid="class_element_1_1_loop_1a3589d07b41c023e5d4e13fd10e3ffd9f" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>Size</name></member>
      <member refid="class_element_1_1_loop_1acb7f0975dfdf4ff76687c55cd2dcdc7b" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>State</name></member>
      <member refid="class_element_1_1_instruction_group_1a097fa1dfb722d1125676d83ad0484022" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>StateListJoin</name></member>
      <member refid="class_element_1_1_instruction_1acc96b260beb5e69e983f78b6dda85221" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>StructImplementation</name></member>
      <member refid="class_element_1_1_loop_1ae057678eb104ef2a8a3e1238965c51b3" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>SummaryString</name></member>
      <member refid="class_element_1_1_loop_1a96cdc6857174d9d24b59975853f537dc" prot="private" virt="non-virtual"><scope>Element::Loop</scope><name>ToState</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_value_1a29ad97030a38ac47c3dd63d2dabc2b36" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>ToString</name></member>
      <member refid="class_element_1_1_instruction_group_1ac7b430f8fbedb9f9e304e2ca2b1db980" prot="public" virt="non-virtual"><scope>Element::Loop</scope><name>TypeOf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
