<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_atomic_host_8cs" kind="file" language="C#">
    <compoundname>AtomicHost.cs</compoundname>
    <innerclass refid="class_element_1_1_atomic_host" prot="public">Element::AtomicHost</innerclass>
    <innernamespace refid="namespace_element">Element</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_element" kindref="compound">Element</ref></highlight></codeline>
<codeline lineno="2"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6" refid="class_element_1_1_atomic_host" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_element_1_1_atomic_host" kindref="compound">AtomicHost</ref><sp/>:<sp/><ref refid="interface_element_1_1_i_host" kindref="compound">IHost</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result</ref><sp/>Parse(<ref refid="class_element_1_1_compiler_input" kindref="compound">CompilerInput</ref><sp/>compilerInput)<sp/>=&gt;<sp/>(<ref refid="struct_element_1_1_result" kindref="compound">Result</ref>)<ref refid="class_element_1_1_source_context" kindref="compound">SourceContext</ref>.<ref refid="class_element_1_1_source_context_1a6e95e6f99286d575948a4b04b07bcee3" kindref="member">CreateAndLoad</ref>(compilerInput);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;float[]&gt;</ref><sp/>Evaluate(<ref refid="class_element_1_1_compiler_input" kindref="compound">CompilerInput</ref><sp/>compilerInput,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expression)<sp/>=&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_persistent_host" kindref="compound">PersistentHost</ref>.Create(compilerInput.Options).Evaluate(compilerInput,<sp/>expression);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;string&gt;</ref><sp/>Typeof(<ref refid="class_element_1_1_compiler_input" kindref="compound">CompilerInput</ref><sp/>input,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expression)<sp/>=&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_persistent_host" kindref="compound">PersistentHost</ref>.Create(input.Options).Typeof(input,<sp/>expression);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;string&gt;</ref><sp/>Summary(<ref refid="class_element_1_1_compiler_input" kindref="compound">CompilerInput</ref><sp/>input,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expression)<sp/>=&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_persistent_host" kindref="compound">PersistentHost</ref>.Create(input.Options).Summary(input,<sp/>expression);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;string&gt;</ref><sp/>NormalForm(<ref refid="class_element_1_1_compiler_input" kindref="compound">CompilerInput</ref><sp/>input,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expression)<sp/>=&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_persistent_host" kindref="compound">PersistentHost</ref>.Create(input.Options).NormalForm(input,<sp/>expression);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/Host/AtomicHost.cs"/>
  </compounddef>
</doxygen>
