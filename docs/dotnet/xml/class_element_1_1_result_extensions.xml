<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_element_1_1_result_extensions" kind="class" language="C#" prot="public">
    <compoundname>Element::ResultExtensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_element_1_1_result_extensions_1a38b3c59e23538f4a8f679ae873c22127" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref></type>
        <definition>static Result Element.ResultExtensions.Fold</definition>
        <argsstring>(this IEnumerable&lt; Result &gt; results)</argsstring>
        <name>Fold</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref> &gt;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="95" column="30" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" bodystart="95" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1a08a80a167c485e12854c880bec8fc70a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;</type>
        <definition>static IReadOnlyCollection&lt;CompilerMessage&gt; Element.ResultExtensions.Combine</definition>
        <argsstring>(this IReadOnlyCollection&lt; CompilerMessage &gt; a, IReadOnlyCollection&lt; CompilerMessage &gt; b)</argsstring>
        <name>Combine</name>
        <param>
          <type>this IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="111" column="43"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1acf3ecb16b0400fa7f8ae7eba36d24006" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;</type>
        <definition>static IReadOnlyCollection&lt;CompilerMessage&gt; Element.ResultExtensions.Combine</definition>
        <argsstring>(this IReadOnlyCollection&lt; CompilerMessage &gt; a, params IReadOnlyCollection&lt; CompilerMessage &gt;[] others)</argsstring>
        <name>Combine</name>
        <param>
          <type>this IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>params IReadOnlyCollection&lt; <ref refid="class_element_1_1_compiler_message" kindref="compound">CompilerMessage</ref> &gt;[]</type>
          <declname>others</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="120" column="43"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1a419b675f92a816414bea621bb9c2021d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref></type>
        <definition>static Result Element.ResultExtensions.Fold&lt; TIn &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TIn &gt;&gt; enumerable)</argsstring>
        <name>Fold&lt; TIn &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TIn &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="123" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1ad8a10b85f4b8a96861ae38ce2f59f2ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;</type>
        <definition>static Result&lt;TResult&gt; Element.ResultExtensions.BindEnumerable&lt; TIn, TResult &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TIn &gt;&gt; enumerable, Func&lt; IEnumerable&lt; TIn &gt;, Result&lt; TResult &gt;&gt; bindFunc)</argsstring>
        <name>BindEnumerable&lt; TIn, TResult &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TIn &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; TIn &gt;, <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;&gt;</type>
          <declname>bindFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="125" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1acc949158151c918b475852ac3f0c60c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;</type>
        <definition>static Result&lt;TResult&gt; Element.ResultExtensions.MapEnumerable&lt; TIn, TResult &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TIn &gt;&gt; enumerable, Func&lt; IEnumerable&lt; TIn &gt;, TResult &gt; mapFunc)</argsstring>
        <name>MapEnumerable&lt; TIn, TResult &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TIn &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; TIn &gt;, TResult &gt;</type>
          <declname>mapFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="133" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1a80ee7921e5c812d89ea202af1b907379" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;</type>
        <definition>static Result&lt;TResult&gt; Element.ResultExtensions.FoldArray&lt; TIn, TResult &gt;</definition>
        <argsstring>(in this Result&lt; TIn[]&gt; enumerable, TResult initial, Func&lt; TResult, TIn, Result&lt; TResult &gt;&gt; foldFunc)</argsstring>
        <name>FoldArray&lt; TIn, TResult &gt;</name>
        <param>
          <type>in this <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TIn[]&gt;</type>
          <declname>enumerable</declname>
        </param>
        <param>
          <type>TResult</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>Func&lt; TResult, TIn, <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;&gt;</type>
          <declname>foldFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="141" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" bodystart="141" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1a0c423578c623f4fb7bcb81fedcabc2c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; IEnumerable&lt; TResult &gt; &gt;</type>
        <definition>static Result&lt;IEnumerable&lt;TResult&gt; &gt; Element.ResultExtensions.ToResultEnumerable&lt; TResult &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TResult &gt;&gt; enumerable)</argsstring>
        <name>ToResultEnumerable&lt; TResult &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="158" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1acab596c5c0a694b8db33b9836bbcb0ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult[]&gt;</type>
        <definition>static Result&lt;TResult[]&gt; Element.ResultExtensions.ToResultArray&lt; TResult &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TResult &gt;&gt; enumerable)</argsstring>
        <name>ToResultArray&lt; TResult &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="160" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_element_1_1_result_extensions_1af681eae7fe58c1304e8c2a3e22a731af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; IReadOnlyList&lt; TResult &gt; &gt;</type>
        <definition>static Result&lt;IReadOnlyList&lt;TResult&gt; &gt; Element.ResultExtensions.ToResultReadOnlyList&lt; TResult &gt;</definition>
        <argsstring>(this IEnumerable&lt; Result&lt; TResult &gt;&gt; enumerable)</argsstring>
        <name>ToResultReadOnlyList&lt; TResult &gt;</name>
        <param>
          <type>this IEnumerable&lt; <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; TResult &gt;&gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="162" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" line="94" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/CompilationUtilities/Result.cs" bodystart="93" bodyend="164"/>
    <listofallmembers>
      <member refid="class_element_1_1_result_extensions_1ad8a10b85f4b8a96861ae38ce2f59f2ab" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>BindEnumerable&lt; TIn, TResult &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1a08a80a167c485e12854c880bec8fc70a" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>Combine</name></member>
      <member refid="class_element_1_1_result_extensions_1acf3ecb16b0400fa7f8ae7eba36d24006" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>Combine</name></member>
      <member refid="class_element_1_1_result_extensions_1a38b3c59e23538f4a8f679ae873c22127" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>Fold</name></member>
      <member refid="class_element_1_1_result_extensions_1a419b675f92a816414bea621bb9c2021d" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>Fold&lt; TIn &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1a80ee7921e5c812d89ea202af1b907379" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>FoldArray&lt; TIn, TResult &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1acc949158151c918b475852ac3f0c60c0" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>MapEnumerable&lt; TIn, TResult &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1acab596c5c0a694b8db33b9836bbcb0ad" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>ToResultArray&lt; TResult &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1a0c423578c623f4fb7bcb81fedcabc2c1" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>ToResultEnumerable&lt; TResult &gt;</name></member>
      <member refid="class_element_1_1_result_extensions_1af681eae7fe58c1304e8c2a3e22a731af" prot="public" virt="non-virtual"><scope>Element::ResultExtensions</scope><name>ToResultReadOnlyList&lt; TResult &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
