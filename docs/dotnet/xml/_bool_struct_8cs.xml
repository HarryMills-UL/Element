<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_bool_struct_8cs" kind="file" language="C#">
    <compoundname>BoolStruct.cs</compoundname>
    <innerclass refid="class_element_1_1_a_s_t_1_1_bool_struct" prot="public">Element::AST::BoolStruct</innerclass>
    <innernamespace refid="namespace_element">Element</innernamespace>
    <innernamespace refid="namespace_element_1_1_a_s_t">Element::AST</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_element_1_1_a_s_t" kindref="compound">Element.AST</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5" refid="class_element_1_1_a_s_t_1_1_bool_struct" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>sealed<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_element_1_1_a_s_t_1_1_bool_struct" kindref="compound">BoolStruct</ref><sp/>:<sp/><ref refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_struct_implementation" kindref="compound">IIntrinsicStructImplementation</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_element_1_1_a_s_t_1_1_bool_struct" kindref="compound">BoolStruct</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_element_1_1_a_s_t_1_1_bool_struct" kindref="compound">BoolStruct</ref><sp/>Instance<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>}<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_element_1_1_a_s_t_1_1_bool_struct" kindref="compound">BoolStruct</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;IValue&gt;</ref><sp/>Construct(<ref refid="class_element_1_1_a_s_t_1_1_struct" kindref="compound">Struct</ref><sp/>@</highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/>IReadOnlyList&lt;IValue&gt;<sp/>arguments,<sp/><ref refid="class_element_1_1_context" kindref="compound">Context</ref><sp/>context)<sp/>=&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_a_s_t_1_1_if" kindref="compound">If</ref>.Instance.Call(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref>[]{<ref refid="namespace_element" kindref="compound">Element</ref>.<ref refid="class_element_1_1_binary" kindref="compound">Binary</ref>.CreateAndOptimize(<ref refid="namespace_element" kindref="compound">Element</ref>.<ref refid="class_element_1_1_binary" kindref="compound">Binary</ref>.Op.Gt,<sp/>(<ref refid="namespace_element" kindref="compound">Element</ref>.<ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref>)arguments[0],<sp/><ref refid="class_element_1_1_constant" kindref="compound">Constant</ref>.Zero),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_constant" kindref="compound">Constant</ref>.True,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_1_1_constant" kindref="compound">Constant</ref>.False},<sp/>context);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;IValue&gt;</ref><sp/>DefaultValue(<ref refid="class_element_1_1_context" kindref="compound">Context</ref><sp/>_)<sp/>=&gt;<sp/><ref refid="class_element_1_1_constant" kindref="compound">Constant</ref>.False;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_result" kindref="compound">Result&lt;bool&gt;</ref><sp/>MatchesConstraint(<ref refid="class_element_1_1_a_s_t_1_1_struct" kindref="compound">Struct</ref><sp/>@</highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/><ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref><sp/>value,<sp/><ref refid="class_element_1_1_context" kindref="compound">Context</ref><sp/>context)<sp/>=&gt;<sp/>value<sp/>is<sp/><ref refid="namespace_element" kindref="compound">Element</ref>.<ref refid="class_element_1_1_instruction" kindref="compound">Instruction</ref><sp/>expr<sp/>&amp;&amp;<sp/>expr.<ref refid="class_element_1_1_instruction_1acc96b260beb5e69e983f78b6dda85221" kindref="member">StructImplementation</ref><sp/>==<sp/>Instance;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_a_s_t_1_1_identifier" kindref="compound">Identifier</ref><sp/><ref refid="struct_element_1_1_a_s_t_1_1_identifier" kindref="compound">Identifier</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>}<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_element_1_1_a_s_t_1_1_identifier" kindref="compound">Identifier</ref>(</highlight><highlight class="stringliteral">&quot;Bool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!2-ValueObjectModel/Intrinsics/Structs/BoolStruct.cs"/>
  </compounddef>
</doxygen>
