<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespace_element_1_1_a_s_t" kind="namespace" language="C#">
    <compoundname>Element::AST</compoundname>
    <innerclass refid="class_element_1_1_a_s_t_1_1_anonymous_block" prot="public">Element::AST::AnonymousBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_any_constraint" prot="public">Element::AST::AnyConstraint</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_ast_node" prot="public">Element::AST::AstNode</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_binary" prot="public">Element::AST::Binary</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_block" prot="public">Element::AST::Block</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_bool_struct" prot="public">Element::AST::BoolStruct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_comma_separated_block" prot="public">Element::AST::CommaSeparatedBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_custom_constraint_declaration" prot="public">Element::AST::CustomConstraintDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_custom_function" prot="public">Element::AST::CustomFunction</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_custom_struct" prot="public">Element::AST::CustomStruct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_custom_struct_declaration" prot="public">Element::AST::CustomStructDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_declaration" prot="public">Element::AST::Declaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_declaration_block" prot="public">Element::AST::DeclarationBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_declaration_scope_extensions" prot="public">Element::AST::DeclarationScopeExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_expression" prot="public">Element::AST::Expression</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_expression_bodied_function" prot="public">Element::AST::ExpressionBodiedFunction</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_expression_bodied_function_declaration" prot="public">Element::AST::ExpressionBodiedFunctionDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_expression_body" prot="public">Element::AST::ExpressionBody</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_expression_chain" prot="public">Element::AST::ExpressionChain</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_fold" prot="public">Element::AST::Fold</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_for" prot="public">Element::AST::For</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_freeform_block" prot="public">Element::AST::FreeformBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_function" prot="public">Element::AST::Function</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_function_block" prot="public">Element::AST::FunctionBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_function_constraint" prot="public">Element::AST::FunctionConstraint</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_function_extensions" prot="public">Element::AST::FunctionExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_global_scope" prot="public">Element::AST::GlobalScope</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_declaration_scope" prot="public">Element::AST::IDeclarationScope</innerclass>
    <innerclass refid="struct_element_1_1_a_s_t_1_1_identifier" prot="public">Element::AST::Identifier</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_expression_chain_start" prot="public">Element::AST::IExpressionChainStart</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_if" prot="public">Element::AST::If</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_constraint_implementation" prot="public">Element::AST::IIntrinsicConstraintImplementation</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_function_implementation" prot="public">Element::AST::IIntrinsicFunctionImplementation</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_implementation" prot="public">Element::AST::IIntrinsicImplementation</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_struct_implementation" prot="public">Element::AST::IIntrinsicStructImplementation</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_intrinsic_value" prot="public">Element::AST::IIntrinsicValue</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_constraint" prot="public">Element::AST::IntrinsicConstraint</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_constraint_declaration" prot="public">Element::AST::IntrinsicConstraintDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_function" prot="public">Element::AST::IntrinsicFunction</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_function_declaration" prot="public">Element::AST::IntrinsicFunctionDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_implementation_cache" prot="public">Element::AST::IntrinsicImplementationCache</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_struct" prot="public">Element::AST::IntrinsicStruct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_struct_declaration" prot="public">Element::AST::IntrinsicStructDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_intrinsic_value" prot="public">Element::AST::IntrinsicValue</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_scope" prot="public">Element::AST::IScope</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_source_location" prot="public">Element::AST::ISourceLocation</innerclass>
    <innerclass refid="interface_element_1_1_a_s_t_1_1_i_value" prot="public">Element::AST::IValue</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_lambda" prot="public">Element::AST::Lambda</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_list" prot="public">Element::AST::List</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_list_of" prot="public">Element::AST::ListOf</innerclass>
    <innerclass refid="struct_element_1_1_a_s_t_1_1_list_separator" prot="package">Element::AST::ListSeparator</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_list_struct" prot="public">Element::AST::ListStruct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_memberwise" prot="public">Element::AST::Memberwise</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_namespace" prot="public">Element::AST::Namespace</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_namespace_block" prot="public">Element::AST::NamespaceBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_namespace_declaration" prot="public">Element::AST::NamespaceDeclaration</innerclass>
    <innerclass refid="struct_element_1_1_a_s_t_1_1_nothing" prot="public">Element::AST::Nothing</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_nothing_constraint" prot="public">Element::AST::NothingConstraint</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_nullary" prot="public">Element::AST::Nullary</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_num_struct" prot="public">Element::AST::NumStruct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_parser" prot="public">Element::AST::Parser</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_partial_application" prot="public">Element::AST::PartialApplication</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_port" prot="public">Element::AST::Port</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_port_list" prot="public">Element::AST::PortList</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_port_list_extensions" prot="public">Element::AST::PortListExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_resolved_block" prot="public">Element::AST::ResolvedBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_resolved_port" prot="public">Element::AST::ResolvedPort</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_return_constraint" prot="public">Element::AST::ReturnConstraint</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_return_constraint_extensions" prot="public">Element::AST::ReturnConstraintExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_scope_bodied_function" prot="public">Element::AST::ScopeBodiedFunction</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_scope_bodied_function_declaration" prot="public">Element::AST::ScopeBodiedFunctionDeclaration</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_source_blob" prot="public">Element::AST::SourceBlob</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_source_locatable_extensions" prot="public">Element::AST::SourceLocatableExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_struct" prot="public">Element::AST::Struct</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_struct_block" prot="public">Element::AST::StructBlock</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_struct_instance" prot="public">Element::AST::StructInstance</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_top_level_expression" prot="public">Element::AST::TopLevelExpression</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_unary" prot="package">Element::AST::Unary</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_uncurrying" prot="public">Element::AST::Uncurrying</innerclass>
    <innerclass refid="struct_element_1_1_a_s_t_1_1_unidentifier" prot="public">Element::AST::Unidentifier</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_value" prot="public">Element::AST::Value</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_value_extensions" prot="public">Element::AST::ValueExtensions</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_value_with_location" prot="public">Element::AST::ValueWithLocation</innerclass>
    <innerclass refid="class_element_1_1_a_s_t_1_1_variadic_port_marker" prot="public">Element::AST::VariadicPortMarker</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/AstNode.cs" line="4" column="1"/>
  </compounddef>
</doxygen>
