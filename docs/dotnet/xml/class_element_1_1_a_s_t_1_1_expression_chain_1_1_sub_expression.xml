<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Element::AST::ExpressionChain::SubExpression</compoundname>
    <basecompoundref refid="class_element_1_1_a_s_t_1_1_ast_node" prot="public" virt="non-virtual">Element.AST.AstNode</basecompoundref>
    <derivedcompoundref refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_call_expression" prot="public" virt="non-virtual">Element.AST.ExpressionChain.CallExpression</derivedcompoundref>
    <derivedcompoundref refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_indexing_expression" prot="public" virt="non-virtual">Element.AST.ExpressionChain.IndexingExpression</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression_1aa3dc2695981526e8d3375a8f24934c5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref> &gt;</type>
        <definition>Result&lt;IValue&gt; Element.AST.ExpressionChain.SubExpression.ResolveSubExpression</definition>
        <argsstring>(IValue previous, IScope parentScope, Context context)</argsstring>
        <name>ResolveSubExpression</name>
        <param>
          <type><ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref></type>
          <declname>previous</declname>
        </param>
        <param>
          <type><ref refid="interface_element_1_1_a_s_t_1_1_i_scope" kindref="compound">IScope</ref></type>
          <declname>parentScope</declname>
        </param>
        <param>
          <type><ref refid="class_element_1_1_context" kindref="compound">Context</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/Expressions/ExpressionChain.cs" line="53" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/Expressions/ExpressionChain.cs" bodystart="53" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression_1a768df7a9d3454cbcade2f626b30036d2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="struct_element_1_1_result" kindref="compound">Result</ref>&lt; <ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref> &gt;</type>
        <definition>abstract Result&lt;IValue&gt; Element.AST.ExpressionChain.SubExpression.SubExpressionImpl</definition>
        <argsstring>(IValue previous, IScope scope, Context context)</argsstring>
        <name>SubExpressionImpl</name>
        <reimplementedby refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_indexing_expression_1a7bbb02a845efe60b81e0db550cdef2bd">SubExpressionImpl</reimplementedby>
        <reimplementedby refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_call_expression_1ac202ab07e18d393b59024cbc57541fe7">SubExpressionImpl</reimplementedby>
        <param>
          <type><ref refid="interface_element_1_1_a_s_t_1_1_i_value" kindref="compound">IValue</ref></type>
          <declname>previous</declname>
        </param>
        <param>
          <type><ref refid="interface_element_1_1_a_s_t_1_1_i_scope" kindref="compound">IScope</ref></type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="class_element_1_1_context" kindref="compound">Context</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/Expressions/ExpressionChain.cs" line="61" column="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AstNode</label>
        <link refid="class_element_1_1_a_s_t_1_1_ast_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Element.AST.ExpressionChain.IndexingExpression</label>
        <link refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_indexing_expression"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISourceLocation</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_source_location"/>
      </node>
      <node id="4">
        <label>Element.AST.ExpressionChain.CallExpression</label>
        <link refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_call_expression"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Element.AST.ExpressionChain.SubExpression</label>
        <link refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AstNode</label>
        <link refid="class_element_1_1_a_s_t_1_1_ast_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ISourceLocation</label>
        <link refid="interface_element_1_1_a_s_t_1_1_i_source_location"/>
      </node>
      <node id="1">
        <label>Element.AST.ExpressionChain.SubExpression</label>
        <link refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/Expressions/ExpressionChain.cs" line="52" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/Element.NET/!1-AST/Expressions/ExpressionChain.cs" bodystart="51" bodyend="62"/>
    <listofallmembers>
      <member refid="class_element_1_1_a_s_t_1_1_ast_node_1aea3371152f46d75be233650ad347bc72" prot="public" virt="non-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>IndexInSource</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression_1aa3dc2695981526e8d3375a8f24934c5b" prot="public" virt="non-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>ResolveSubExpression</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_ast_node_1a6d91ea72f391505441e27fdb40c75aec" prot="public" virt="non-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>SourceInfo</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_expression_chain_1_1_sub_expression_1a768df7a9d3454cbcade2f626b30036d2" prot="protected" virt="pure-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>SubExpressionImpl</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_ast_node_1afd4482e89cf109b816465c92c7960dc5" prot="public" virt="non-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>Validate</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_ast_node_1a16e8a7969fb8eec8e70358c020f0cc2f" prot="public" virt="non-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>Validate</name></member>
      <member refid="class_element_1_1_a_s_t_1_1_ast_node_1a4df48c17a2f7b364d593d7291afad2a8" prot="protected" virt="pure-virtual"><scope>Element::AST::ExpressionChain::SubExpression</scope><name>ValidateImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
