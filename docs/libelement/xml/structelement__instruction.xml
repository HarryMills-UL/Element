<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structelement__instruction" kind="struct" language="C++" prot="public">
    <compoundname>element_instruction</compoundname>
    <basecompoundref refid="classelement_1_1object" prot="public" virt="non-virtual">element::object</basecompoundref>
    <basecompoundref refid="structrtti__type" prot="public" virt="non-virtual">rtti_type&lt; element_instruction &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; element_instruction &gt;</basecompoundref>
    <derivedcompoundref refid="structelement__instruction__binary" prot="public" virt="non-virtual">element_instruction_binary</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__constant" prot="public" virt="non-virtual">element_instruction_constant</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__fold" prot="public" virt="non-virtual">element_instruction_fold</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__for" prot="public" virt="non-virtual">element_instruction_for</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__if" prot="public" virt="non-virtual">element_instruction_if</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__indexer" prot="public" virt="non-virtual">element_instruction_indexer</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__input" prot="public" virt="non-virtual">element_instruction_input</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__nullary" prot="public" virt="non-virtual">element_instruction_nullary</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__select" prot="public" virt="non-virtual">element_instruction_select</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__serialised__structure" prot="public" virt="non-virtual">element_instruction_serialised_structure</derivedcompoundref>
    <derivedcompoundref refid="structelement__instruction__unary" prot="public" virt="non-virtual">element_instruction_unary</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structelement__instruction_1a76803d3286f1c0a4e540cf2d6f3b9b22" prot="public" static="no" mutable="yes">
        <type><ref refid="classelement_1_1type" kindref="compound">element::type_const_ptr</ref></type>
        <definition>element::type_const_ptr element_instruction::actual_type</definition>
        <argsstring></argsstring>
        <name>actual_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="50" column="37" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structelement__instruction_1a5ae105a4a79ed02ed773b43b58143c5d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; instruction_const_shared_ptr &gt;</type>
        <definition>std::vector&lt;instruction_const_shared_ptr&gt; element_instruction::m_dependents</definition>
        <argsstring></argsstring>
        <name>m_dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="59" column="17" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structelement__instruction_1ae26c2540b369adb80a8f010dfe07c399" prot="protected" static="no" mutable="no">
        <type>element_type_id</type>
        <definition>element_type_id element_instruction::m_type_id</definition>
        <argsstring></argsstring>
        <name>m_type_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="60" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structelement__instruction_1ab1d78775506ad663e0556d8c6030ab65" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int element_instruction::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="61" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structelement__instruction_1a712cd03bdded21fafa62bf94f18f358e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; instruction_const_shared_ptr &gt; &amp;</type>
        <definition>const std::vector&lt;instruction_const_shared_ptr&gt;&amp; element_instruction::dependents</definition>
        <argsstring>() const</argsstring>
        <name>dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="19" column="24" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1ab47fc733a09a9d6ee64b7bc40234b7a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; instruction_const_shared_ptr &gt; &amp;</type>
        <definition>std::vector&lt;instruction_const_shared_ptr&gt;&amp; element_instruction::dependents</definition>
        <argsstring>()</argsstring>
        <name>dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="20" column="17" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1a876d321d32779491ac0e632a76f6630c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t element_instruction::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <reimplementedby refid="structelement__instruction__constant_1a4b164fe6b63d71841f4c0ab77ba2ef2d">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__input_1a9877b59b670a40a28b58f4d0d6921724">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__serialised__structure_1a8ada0b8b4ceb4524e15a8e80844280f5">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__nullary_1a9e674e7c60f507628104925204861683">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__unary_1a8d34b22475a22a5b92cceeea1046e4d7">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__binary_1af1114cc8c70e66615b166bfdd83357eb">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__if_1ad0758a897e0b970e11a4ebcd86d10210">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__for_1ad7f07569fe312dfed5b273b2819ae75b">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__fold_1a8c84b9d5b54b0dc3143f6eef62343e14">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__indexer_1a97dfa7a5c51e65809a103359c223ac43">get_size</reimplementedby>
        <reimplementedby refid="structelement__instruction__select_1af5d70d3c7d824b3f5e07e3c454c75023">get_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="22" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1a265563e4d616399f5080b353ab0acf16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool element_instruction::is_constant</definition>
        <argsstring>() const override</argsstring>
        <name>is_constant</name>
        <reimplements refid="classelement_1_1object_1ab44c28014a94092052f9cf9418eef340">is_constant</reimplements>
        <reimplementedby refid="structelement__instruction__input_1ad7a4dbc5b2c1cb4f10697fb5669222e1">is_constant</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="23" column="11" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1a63b15ce9d9636bcfbce49c643264025d" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool element_instruction::matches_constraint</definition>
        <argsstring>(const element::compilation_context &amp;context, const element::constraint *constraint) const final</argsstring>
        <name>matches_constraint</name>
        <reimplements refid="classelement_1_1object_1a3ba311dae552affb306308617e394cf8">matches_constraint</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">element::compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1constraint" kindref="compound">element::constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="32" column="11" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1ae3f2d58fe0a38d1aa24a986dbbdd88e8" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>const <ref refid="classelement_1_1constraint" kindref="compound">element::constraint</ref> *</type>
        <definition>const element::constraint* element_instruction::get_constraint</definition>
        <argsstring>() const final</argsstring>
        <name>get_constraint</name>
        <reimplements refid="classelement_1_1object_1a3452e5e30891e487707a7fb300f6465d">get_constraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="43" column="32" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1a9ef2181af4c362af26904d9cbb30075a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string element_instruction::typeof_info</definition>
        <argsstring>() const override</argsstring>
        <name>typeof_info</name>
        <reimplements refid="classelement_1_1object_1ad349d741b95f1a6fa5bbdd5188e8292b">typeof_info</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="45" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1af1261514857a1fcc87fb291149106396" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>std::shared_ptr&lt; const <ref refid="structelement__instruction" kindref="compound">element_instruction</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const element_instruction&gt; element_instruction::to_instruction</definition>
        <argsstring>() const final</argsstring>
        <name>to_instruction</name>
        <reimplements refid="classelement_1_1object_1ac285622d5bdbf53d29ed531a7a50cd2a">to_instruction</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="47" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1afd27d82abd590258cf42be59cc3375c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>element::object_const_shared_ptr</type>
        <definition>std::shared_ptr&lt; const element::object &gt; element_instruction::index</definition>
        <argsstring>(const element::compilation_context &amp;context, const element::identifier &amp;name, const element::source_information &amp;source_info) const override</argsstring>
        <name>index</name>
        <reimplements refid="classelement_1_1object_1a542266c49533b394c8f7668748f6424a">index</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">element::compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">element::identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">element::source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="68" column="39" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.cpp" bodystart="26" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structelement__instruction_1a0e4b3a0f9c9f981e2305c2f7b83f08c3" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>element_instruction::element_instruction</definition>
        <argsstring>(element_type_id t, element::type_const_ptr actual_type)</argsstring>
        <name>element_instruction</name>
        <param>
          <type>element_type_id</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classelement_1_1type" kindref="compound">element::type_const_ptr</ref></type>
          <declname>actual_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="53" column="14" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structelement__instruction_1a892e137a2beab2900b0fec3a24dd59cd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>element::object_const_shared_ptr</type>
        <definition>std::shared_ptr&lt; const element::object &gt; element_instruction::compile</definition>
        <argsstring>(const element::compilation_context &amp;context, const element::source_information &amp;source_info) const override</argsstring>
        <name>compile</name>
        <reimplements refid="classelement_1_1object_1aa562aac5d1f233abda4a5348ac38da73">compile</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">element::compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">element::source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="63" column="39" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>element_instruction_input</label>
        <link refid="structelement__instruction__input"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>element_instruction_fold</label>
        <link refid="structelement__instruction__fold"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>element_instruction_constant</label>
        <link refid="structelement__instruction__constant"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>element_instruction_unary</label>
        <link refid="structelement__instruction__unary"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rtti_type&lt; element_instruction &gt;</label>
        <link refid="structrtti__type"/>
      </node>
      <node id="9">
        <label>element_instruction_if</label>
        <link refid="structelement__instruction__if"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>element_instruction_serialised_structure</label>
        <link refid="structelement__instruction__serialised__structure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
      </node>
      <node id="8">
        <label>element_instruction_for</label>
        <link refid="structelement__instruction__for"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>element_instruction_nullary</label>
        <link refid="structelement__instruction__nullary"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; element_instruction &gt;</label>
      </node>
      <node id="5">
        <label>element_instruction_binary</label>
        <link refid="structelement__instruction__binary"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>element_instruction_select</label>
        <link refid="structelement__instruction__select"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>element_instruction_indexer</label>
        <link refid="structelement__instruction__indexer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>element_instruction</label>
        <link refid="structelement__instruction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rtti_type&lt; element_instruction &gt;</label>
        <link refid="structrtti__type"/>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; element_instruction &gt;</label>
      </node>
      <node id="3">
        <label>element::source_information</label>
        <link refid="classelement_1_1source__information"/>
      </node>
      <node id="1">
        <label>element_instruction</label>
        <link refid="structelement__instruction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" line="17" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/instruction_tree/instructions.hpp" bodystart="16" bodyend="72"/>
    <listofallmembers>
      <member refid="structelement__instruction_1a76803d3286f1c0a4e540cf2d6f3b9b22" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>actual_type</name></member>
      <member refid="structrtti__type_1ae8a056e6d6a658d2e5ccf757da1c5031" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>as</name></member>
      <member refid="structrtti__type_1ac9b5c9bad7ef9069f612b0356a6ffffc" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>as</name></member>
      <member refid="classelement_1_1object_1af6dbeefad4c697ab757864ae78fd831e" prot="public" virt="virtual"><scope>element_instruction</scope><name>call</name></member>
      <member refid="structelement__instruction_1a892e137a2beab2900b0fec3a24dd59cd" prot="protected" virt="virtual"><scope>element_instruction</scope><name>compile</name></member>
      <member refid="structelement__instruction_1a712cd03bdded21fafa62bf94f18f358e" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>dependents</name></member>
      <member refid="structelement__instruction_1ab47fc733a09a9d6ee64b7bc40234b7a5" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>dependents</name></member>
      <member refid="structelement__instruction_1a0e4b3a0f9c9f981e2305c2f7b83f08c3" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>element_instruction</name></member>
      <member refid="structelement__instruction_1ae3f2d58fe0a38d1aa24a986dbbdd88e8" prot="public" virt="virtual"><scope>element_instruction</scope><name>get_constraint</name></member>
      <member refid="classelement_1_1object_1a82a0020492785cb186c7d09ea88aa79d" prot="public" virt="virtual"><scope>element_instruction</scope><name>get_inputs</name></member>
      <member refid="classelement_1_1object_1a17cca83a78581c5e8b73652f57910d1a" prot="public" virt="virtual"><scope>element_instruction</scope><name>get_output</name></member>
      <member refid="classelement_1_1object_1a410a20ebbac9643d6798ffa98a34ff17" prot="public" virt="virtual"><scope>element_instruction</scope><name>get_scope</name></member>
      <member refid="structelement__instruction_1a876d321d32779491ac0e632a76f6630c" prot="public" virt="virtual"><scope>element_instruction</scope><name>get_size</name></member>
      <member refid="structelement__instruction_1afd27d82abd590258cf42be59cc3375c3" prot="public" virt="virtual"><scope>element_instruction</scope><name>index</name></member>
      <member refid="structrtti__type_1ad10b160dbb5d7b81ffddfcef4c2131f2" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>is</name></member>
      <member refid="structelement__instruction_1a265563e4d616399f5080b353ab0acf16" prot="public" virt="virtual"><scope>element_instruction</scope><name>is_constant</name></member>
      <member refid="structelement__instruction_1a5ae105a4a79ed02ed773b43b58143c5d" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>m_dependents</name></member>
      <member refid="structelement__instruction_1ab1d78775506ad663e0556d8c6030ab65" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>m_size</name></member>
      <member refid="structelement__instruction_1ae26c2540b369adb80a8f010dfe07c399" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>m_type_id</name></member>
      <member refid="structelement__instruction_1a63b15ce9d9636bcfbce49c643264025d" prot="public" virt="virtual"><scope>element_instruction</scope><name>matches_constraint</name></member>
      <member refid="classelement_1_1object_1a0b77789880bc695115d2428b9b1f2fe6" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>object</name></member>
      <member refid="classelement_1_1object_1aecee67e856bcf56ecaee3848c3b834fe" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>object</name></member>
      <member refid="classelement_1_1object_1af31de89eb2a06fe7856ae3d8252fdd1b" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>object</name></member>
      <member refid="classelement_1_1object_1a05f452496fc2f14d4844fefe0326e5cd" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1aec74730c57e08a37dc6a61992e84e543" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>operator=</name></member>
      <member refid="structrtti__type_1a4ba3d8090b0e77409fbfa90f769a0324" prot="protected" virt="non-virtual"><scope>element_instruction</scope><name>rtti_type</name></member>
      <member refid="classelement_1_1object_1a8c377027f992c5b3440679941619c468" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>source_info</name></member>
      <member refid="structrtti__type_1a2162c625991b82bdb390809a16c8c649" prot="public" virt="non-virtual"><scope>element_instruction</scope><name>subtype</name></member>
      <member refid="classelement_1_1object_1a930429a343359aaf0cf603d251ca53a2" prot="public" virt="virtual"><scope>element_instruction</scope><name>to_code</name></member>
      <member refid="structelement__instruction_1af1261514857a1fcc87fb291149106396" prot="public" virt="virtual"><scope>element_instruction</scope><name>to_instruction</name></member>
      <member refid="classelement_1_1object_1a1c22bf6d69ae19c71d6b2bd0cedfd675" prot="public" virt="virtual"><scope>element_instruction</scope><name>to_string</name></member>
      <member refid="structelement__instruction_1a9ef2181af4c362af26904d9cbb30075a" prot="public" virt="virtual"><scope>element_instruction</scope><name>typeof_info</name></member>
      <member refid="classelement_1_1object_1a9737ac6b6eef6c4e41d0a15ebf42762a" prot="public" virt="virtual"><scope>element_instruction</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
