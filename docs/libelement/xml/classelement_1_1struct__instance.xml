<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classelement_1_1struct__instance" kind="class" language="C++" prot="public" final="yes">
    <compoundname>element::struct_instance</compoundname>
    <basecompoundref refid="classelement_1_1object" prot="public" virt="non-virtual">element::object</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; struct_instance &gt;</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classelement_1_1struct__instance_1add53dd148827a8fd567914d0e55267a8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classelement_1_1struct__declaration" kindref="compound">struct_declaration</ref> *const</type>
        <definition>const struct_declaration* const element::struct_instance::declarer</definition>
        <argsstring></argsstring>
        <name>declarer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="42" column="40" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelement_1_1struct__instance_1a1acb3194f4545f869388bec1dbba726d" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, object_const_shared_ptr &gt;</type>
        <definition>std::map&lt;std::string, object_const_shared_ptr&gt; element::struct_instance::fields</definition>
        <argsstring></argsstring>
        <name>fields</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="43" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classelement_1_1struct__instance_1aca3211a7de7495d23beed8c060332ef6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>struct_instance::struct_instance</definition>
        <argsstring>(const struct_declaration *declarer)</argsstring>
        <name>struct_instance</name>
        <param>
          <type>const <ref refid="classelement_1_1struct__declaration" kindref="compound">struct_declaration</ref> *</type>
          <declname>declarer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="12" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ac1ae0c92c1de3318439158d9027031c5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>struct_instance::struct_instance</definition>
        <argsstring>(const struct_declaration *declarer, const std::vector&lt; object_const_shared_ptr &gt; &amp;expressions)</argsstring>
        <name>struct_instance</name>
        <param>
          <type>const <ref refid="classelement_1_1struct__declaration" kindref="compound">struct_declaration</ref> *</type>
          <declname>declarer</declname>
        </param>
        <param>
          <type>const std::vector&lt; object_const_shared_ptr &gt; &amp;</type>
          <declname>expressions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="13" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1a1dcc32d60645985cd64e001b572c9213" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string struct_instance::typeof_info</definition>
        <argsstring>() const override</argsstring>
        <name>typeof_info</name>
        <reimplements refid="classelement_1_1object_1ad349d741b95f1a6fa5bbdd5188e8292b">typeof_info</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="15" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ad1f708125163973eff5d93845e3dad93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string struct_instance::to_string</definition>
        <argsstring>() const override</argsstring>
        <name>to_string</name>
        <reimplements refid="classelement_1_1object_1a1c22bf6d69ae19c71d6b2bd0cedfd675">to_string</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="16" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="18" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1a5ce3cc153193cde61b84bb28b6af3735" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool struct_instance::matches_constraint</definition>
        <argsstring>(const compilation_context &amp;context, const constraint *constraint) const override</argsstring>
        <name>matches_constraint</name>
        <reimplements refid="classelement_1_1object_1a3ba311dae552affb306308617e394cf8">matches_constraint</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1constraint" kindref="compound">constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="18" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1af6d3bcee497ec8548fa8cc04cde3ce69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classelement_1_1constraint" kindref="compound">constraint</ref> *</type>
        <definition>const constraint * struct_instance::get_constraint</definition>
        <argsstring>() const override</argsstring>
        <name>get_constraint</name>
        <reimplements refid="classelement_1_1object_1a3452e5e30891e487707a7fb300f6465d">get_constraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="19" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ad9ab94083295413e54cd16de680b8fed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr struct_instance::index</definition>
        <argsstring>(const compilation_context &amp;context, const identifier &amp;name, const source_information &amp;source_info) const override</argsstring>
        <name>index</name>
        <reimplements refid="classelement_1_1object_1a542266c49533b394c8f7668748f6424a">index</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="21" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ac593a4fdaeecaa787bffcf98377df1a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr struct_instance::compile</definition>
        <argsstring>(const compilation_context &amp;context, const source_information &amp;source_info) const override</argsstring>
        <name>compile</name>
        <reimplements refid="classelement_1_1object_1aa562aac5d1f233abda4a5348ac38da73">compile</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="25" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ac40461ab03c37d881d26f96632772035" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::shared_ptr&lt; const <ref refid="structelement__instruction" kindref="compound">element_instruction</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const element_instruction &gt; struct_instance::to_instruction</definition>
        <argsstring>() const final</argsstring>
        <name>to_instruction</name>
        <reimplements refid="classelement_1_1object_1ac285622d5bdbf53d29ed531a7a50cd2a">to_instruction</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="28" column="26" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.cpp" bodystart="74" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1a21f133b57a32d2093dfbbdfa47d1953d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool element::struct_instance::is_constant</definition>
        <argsstring>() const override</argsstring>
        <name>is_constant</name>
        <reimplements refid="classelement_1_1object_1ab44c28014a94092052f9cf9418eef340">is_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="30" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1struct__instance_1ac171463a79d58396a05ed2d7411830e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classelement_1_1struct__instance" kindref="compound">struct_instance</ref> &gt;</type>
        <definition>std::shared_ptr&lt; struct_instance &gt; element::struct_instance::clone_and_fill_with_expressions</definition>
        <argsstring>(const compilation_context &amp;context, Callable &amp;&amp;callable) const</argsstring>
        <name>clone_and_fill_with_expressions</name>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>Callable &amp;&amp;</type>
          <declname>callable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="40" column="26" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="51" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classelement_1_1struct__instance_1a8cd6d67ea64c095c055ac7ff549f1776" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classelement_1_1struct__instance" kindref="compound">struct_instance</ref> &gt;</type>
        <definition>std::shared_ptr&lt; struct_instance &gt; element::struct_instance::clone_and_fill_with_expressions_internal</definition>
        <argsstring>(const compilation_context &amp;context, Callable &amp;&amp;callable, int &amp;index) const</argsstring>
        <name>clone_and_fill_with_expressions_internal</name>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>Callable &amp;&amp;</type>
          <declname>callable</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="47" column="26" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="64" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>std::enable_shared_from_this&lt; struct_instance &gt;</label>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
      </node>
      <node id="1">
        <label>element::struct_instance</label>
        <link refid="classelement_1_1struct__instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::enable_shared_from_this&lt; struct_instance &gt;</label>
      </node>
      <node id="5">
        <label>element::struct_declaration</label>
        <link refid="classelement_1_1struct__declaration"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>element::identifier</label>
        <link refid="classelement_1_1identifier"/>
        <childnode refid="7" relation="usage">
          <edgelabel>list_at_identifier</edgelabel>
          <edgelabel>return_identifier</edgelabel>
          <edgelabel>list_count_identifier</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>element::declaration</label>
        <link refid="classelement_1_1declaration"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>element::struct_instance</label>
        <link refid="classelement_1_1struct__instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>declarer</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>element::source_information</label>
        <link refid="classelement_1_1source__information"/>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" line="10" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/struct_instance.hpp" bodystart="9" bodyend="48"/>
    <listofallmembers>
      <member refid="classelement_1_1object_1af6dbeefad4c697ab757864ae78fd831e" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>call</name></member>
      <member refid="classelement_1_1struct__instance_1ac171463a79d58396a05ed2d7411830e1" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>clone_and_fill_with_expressions</name></member>
      <member refid="classelement_1_1struct__instance_1a8cd6d67ea64c095c055ac7ff549f1776" prot="private" virt="non-virtual"><scope>element::struct_instance</scope><name>clone_and_fill_with_expressions_internal</name></member>
      <member refid="classelement_1_1struct__instance_1ac593a4fdaeecaa787bffcf98377df1a7" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>compile</name></member>
      <member refid="classelement_1_1struct__instance_1add53dd148827a8fd567914d0e55267a8" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>declarer</name></member>
      <member refid="classelement_1_1struct__instance_1a1acb3194f4545f869388bec1dbba726d" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>fields</name></member>
      <member refid="classelement_1_1struct__instance_1af6d3bcee497ec8548fa8cc04cde3ce69" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>get_constraint</name></member>
      <member refid="classelement_1_1object_1a82a0020492785cb186c7d09ea88aa79d" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>get_inputs</name></member>
      <member refid="classelement_1_1object_1a17cca83a78581c5e8b73652f57910d1a" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>get_output</name></member>
      <member refid="classelement_1_1object_1a410a20ebbac9643d6798ffa98a34ff17" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>get_scope</name></member>
      <member refid="classelement_1_1struct__instance_1ad9ab94083295413e54cd16de680b8fed" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>index</name></member>
      <member refid="classelement_1_1struct__instance_1a21f133b57a32d2093dfbbdfa47d1953d" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>is_constant</name></member>
      <member refid="classelement_1_1struct__instance_1a5ce3cc153193cde61b84bb28b6af3735" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>matches_constraint</name></member>
      <member refid="classelement_1_1object_1a0b77789880bc695115d2428b9b1f2fe6" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1aecee67e856bcf56ecaee3848c3b834fe" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1af31de89eb2a06fe7856ae3d8252fdd1b" prot="protected" virt="non-virtual"><scope>element::struct_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1a05f452496fc2f14d4844fefe0326e5cd" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1aec74730c57e08a37dc6a61992e84e543" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1a8c377027f992c5b3440679941619c468" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>source_info</name></member>
      <member refid="classelement_1_1struct__instance_1aca3211a7de7495d23beed8c060332ef6" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>struct_instance</name></member>
      <member refid="classelement_1_1struct__instance_1ac1ae0c92c1de3318439158d9027031c5" prot="public" virt="non-virtual"><scope>element::struct_instance</scope><name>struct_instance</name></member>
      <member refid="classelement_1_1object_1a930429a343359aaf0cf603d251ca53a2" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>to_code</name></member>
      <member refid="classelement_1_1struct__instance_1ac40461ab03c37d881d26f96632772035" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>to_instruction</name></member>
      <member refid="classelement_1_1struct__instance_1ad1f708125163973eff5d93845e3dad93" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>to_string</name></member>
      <member refid="classelement_1_1struct__instance_1a1dcc32d60645985cd64e001b572c9213" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>typeof_info</name></member>
      <member refid="classelement_1_1object_1a9737ac6b6eef6c4e41d0a15ebf42762a" prot="public" virt="virtual"><scope>element::struct_instance</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
