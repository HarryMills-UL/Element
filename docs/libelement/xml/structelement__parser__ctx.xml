<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structelement__parser__ctx" kind="struct" language="C++" prot="public">
    <compoundname>element_parser_ctx</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structelement__parser__ctx_1af22fcb6a18506b4495facf27ed85ecb9" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structelement__log__ctx" kindref="compound">element_log_ctx</ref> &gt;</type>
        <definition>std::shared_ptr&lt;element_log_ctx&gt; element_parser_ctx::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="173" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structelement__parser__ctx_1aad022a78218ce762742e2e29b372123b" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structelement_1_1source__context" kindref="compound">element::source_context</ref> &gt;</type>
        <definition>std::shared_ptr&lt;element::source_context&gt; element_parser_ctx::src_context</definition>
        <argsstring></argsstring>
        <name>src_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="174" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structelement__parser__ctx_1a0a9a579311dd34fef640b94861537cac" prot="public" static="no" mutable="no">
        <type><ref refid="structelement__tokeniser__ctx" kindref="compound">element_tokeniser_ctx</ref> *</type>
        <definition>element_tokeniser_ctx* element_parser_ctx::tokeniser</definition>
        <argsstring></argsstring>
        <name>tokeniser</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="175" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structelement__parser__ctx_1a0646363cc0058e99f3d0c698407ec7d7" prot="public" static="no" mutable="no">
        <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
        <definition>element_ast* element_parser_ctx::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="177" column="17" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structelement__parser__ctx_1a202ae82a2568f29f10da381c36b6ed4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_literal</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_literal</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="180" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="212" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1ae765b8d935736b201e7c5580321fd87c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_identifier</definition>
        <argsstring>(size_t *tindex, element_ast *ast, bool allow_reserved_args=false, bool allow_reserved_names=false)</argsstring>
        <name>parse_identifier</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_reserved_args</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_reserved_names</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="182" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="224" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a34e2db345a13ac5834b29028e571ffc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_typename</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_typename</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="184" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="258" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1af4127c722b1217db81bd67ac81562ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_port</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_port</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="186" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="281" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a033b5157026888fde529d0825928cc74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_portlist</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_portlist</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="188" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="327" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1ac4e55a2a1037fe8cb3ef5dc41b4624b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_exprlist</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_exprlist</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="190" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="345" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a0c2bb3a45c9cee57c0885d80881b745e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_call</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_call</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="192" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="393" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1af04bcf19103900e4c54badade3a60402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_lambda</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_lambda</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="194" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="478" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a8a7243aff07ee28f4f95e286dde892aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_expression</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_expression</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="196" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="520" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1aedc761b9ca9c5861c3836ebee5e251ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_qualifiers</definition>
        <argsstring>(size_t *tindex, element_ast_flags *flags)</argsstring>
        <name>parse_qualifiers</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type>element_ast_flags *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="198" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="543" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a2711c226f2a5e092d92a08a2551949b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_declaration</definition>
        <argsstring>(size_t *tindex, element_ast *ast, bool find_return_type)</argsstring>
        <name>parse_declaration</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>find_return_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="201" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="581" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1aafe60996f97dd24ca89613cd2ab7beb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_scope</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_scope</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="203" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="667" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a4351da7b95bf0cee3fd5da7e5870ff24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_anonymous_block</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_anonymous_block</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="205" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="687" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a56723bb1c225cad7ce86d8d1cf23c6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_body</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_body</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="206" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="717" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1ac9c5978050783c9dabf758a69eecab79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_function</definition>
        <argsstring>(size_t *tindex, element_ast *ast, element_ast_flags declflags)</argsstring>
        <name>parse_function</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>element_ast_flags</type>
          <declname>declflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="209" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="756" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a713aa7ebc4dc7c5ab762a0f95de5caf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_struct</definition>
        <argsstring>(size_t *tindex, element_ast *ast, element_ast_flags declflags)</argsstring>
        <name>parse_struct</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>element_ast_flags</type>
          <declname>declflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="212" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="796" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a42fec80c1e4a7edf8f460e8eab276f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_constraint</definition>
        <argsstring>(size_t *tindex, element_ast *ast, element_ast_flags declflags)</argsstring>
        <name>parse_constraint</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>element_ast_flags</type>
          <declname>declflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="213" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="848" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a1d03491aa4f0bba888b3ece7a226eb5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_namespace</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_namespace</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="215" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="908" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1ab30984c71d20a7a8311916a7185cbd0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse_item</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse_item</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="217" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="933" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a7b79166518f1a2821726bcc72ee6bd1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::parse</definition>
        <argsstring>(size_t *tindex, element_ast *ast)</argsstring>
        <name>parse</name>
        <param>
          <type>size_t *</type>
          <declname>tindex</declname>
        </param>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="219" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="981" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a6b9ace1f9d4677c7b4f9f1b25317b367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::ast_build</definition>
        <argsstring>()</argsstring>
        <name>ast_build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="220" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1006" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1aaf070948690c9ca30ab8fe20e7e727a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::validate</definition>
        <argsstring>(element_ast *ast)</argsstring>
        <name>validate</name>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="223" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1033" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a821ad93c15cd3b8471fc11f497e3f0d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element_parser_ctx::log</definition>
        <argsstring>(int message_code, const std::string &amp;message=&quot;&quot;, const element_ast *nearest_ast=nullptr) const</argsstring>
        <name>log</name>
        <param>
          <type>int</type>
          <declname>message_code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const <ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>nearest_ast</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="232" column="10" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1213" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1aff659cef5bfeb02eacfb88446af44654" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element_parser_ctx::log</definition>
        <argsstring>(const std::string &amp;message) const</argsstring>
        <name>log</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="233" column="10" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1221" bodyend="1227"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structelement__parser__ctx_1a31d6ed3c74fb275d0472a8e6c4c97dd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::validate_type</definition>
        <argsstring>(element_ast *ast)</argsstring>
        <name>validate_type</name>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="226" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1056" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a41873c3181ae2d5fac191da8f6bb2fc2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::validate_portlist</definition>
        <argsstring>(element_ast *ast)</argsstring>
        <name>validate_portlist</name>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="227" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1077" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1aaefe108db499547ce5c51690e46c066c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::validate_struct</definition>
        <argsstring>(element_ast *ast)</argsstring>
        <name>validate_struct</name>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="228" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1107" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="structelement__parser__ctx_1a19ceced5bdd673a0a20225c08936bcce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result element_parser_ctx::validate_scope</definition>
        <argsstring>(element_ast *ast)</argsstring>
        <name>validate_scope</name>
        <param>
          <type><ref refid="structelement__ast" kindref="compound">element_ast</ref> *</type>
          <declname>ast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="229" column="20" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast.cpp" bodystart="1142" bodyend="1170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>element_parser_ctx</label>
        <link refid="structelement__parser__ctx"/>
        <childnode refid="2" relation="usage">
          <edgelabel>tokeniser</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>element_tokeniser_ctx</label>
        <link refid="structelement__tokeniser__ctx"/>
      </node>
      <node id="3">
        <label>element_ast</label>
        <link refid="structelement__ast"/>
        <childnode refid="3" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" line="172" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/ast/ast_internal.hpp" bodystart="171" bodyend="234"/>
    <listofallmembers>
      <member refid="structelement__parser__ctx_1a6b9ace1f9d4677c7b4f9f1b25317b367" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>ast_build</name></member>
      <member refid="structelement__parser__ctx_1a821ad93c15cd3b8471fc11f497e3f0d2" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>log</name></member>
      <member refid="structelement__parser__ctx_1aff659cef5bfeb02eacfb88446af44654" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>log</name></member>
      <member refid="structelement__parser__ctx_1af22fcb6a18506b4495facf27ed85ecb9" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>logger</name></member>
      <member refid="structelement__parser__ctx_1a7b79166518f1a2821726bcc72ee6bd1b" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse</name></member>
      <member refid="structelement__parser__ctx_1a4351da7b95bf0cee3fd5da7e5870ff24" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_anonymous_block</name></member>
      <member refid="structelement__parser__ctx_1a56723bb1c225cad7ce86d8d1cf23c6ec" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_body</name></member>
      <member refid="structelement__parser__ctx_1a0c2bb3a45c9cee57c0885d80881b745e" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_call</name></member>
      <member refid="structelement__parser__ctx_1a42fec80c1e4a7edf8f460e8eab276f3b" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_constraint</name></member>
      <member refid="structelement__parser__ctx_1a2711c226f2a5e092d92a08a2551949b1" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_declaration</name></member>
      <member refid="structelement__parser__ctx_1a8a7243aff07ee28f4f95e286dde892aa" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_expression</name></member>
      <member refid="structelement__parser__ctx_1ac4e55a2a1037fe8cb3ef5dc41b4624b9" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_exprlist</name></member>
      <member refid="structelement__parser__ctx_1ac9c5978050783c9dabf758a69eecab79" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_function</name></member>
      <member refid="structelement__parser__ctx_1ae765b8d935736b201e7c5580321fd87c" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_identifier</name></member>
      <member refid="structelement__parser__ctx_1ab30984c71d20a7a8311916a7185cbd0f" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_item</name></member>
      <member refid="structelement__parser__ctx_1af04bcf19103900e4c54badade3a60402" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_lambda</name></member>
      <member refid="structelement__parser__ctx_1a202ae82a2568f29f10da381c36b6ed4b" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_literal</name></member>
      <member refid="structelement__parser__ctx_1a1d03491aa4f0bba888b3ece7a226eb5c" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_namespace</name></member>
      <member refid="structelement__parser__ctx_1af4127c722b1217db81bd67ac81562ff2" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_port</name></member>
      <member refid="structelement__parser__ctx_1a033b5157026888fde529d0825928cc74" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_portlist</name></member>
      <member refid="structelement__parser__ctx_1aedc761b9ca9c5861c3836ebee5e251ba" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_qualifiers</name></member>
      <member refid="structelement__parser__ctx_1aafe60996f97dd24ca89613cd2ab7beb8" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_scope</name></member>
      <member refid="structelement__parser__ctx_1a713aa7ebc4dc7c5ab762a0f95de5caf1" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_struct</name></member>
      <member refid="structelement__parser__ctx_1a34e2db345a13ac5834b29028e571ffc9" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>parse_typename</name></member>
      <member refid="structelement__parser__ctx_1a0646363cc0058e99f3d0c698407ec7d7" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>root</name></member>
      <member refid="structelement__parser__ctx_1aad022a78218ce762742e2e29b372123b" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>src_context</name></member>
      <member refid="structelement__parser__ctx_1a0a9a579311dd34fef640b94861537cac" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>tokeniser</name></member>
      <member refid="structelement__parser__ctx_1aaf070948690c9ca30ab8fe20e7e727a6" prot="public" virt="non-virtual"><scope>element_parser_ctx</scope><name>validate</name></member>
      <member refid="structelement__parser__ctx_1a41873c3181ae2d5fac191da8f6bb2fc2" prot="private" virt="non-virtual"><scope>element_parser_ctx</scope><name>validate_portlist</name></member>
      <member refid="structelement__parser__ctx_1a19ceced5bdd673a0a20225c08936bcce" prot="private" virt="non-virtual"><scope>element_parser_ctx</scope><name>validate_scope</name></member>
      <member refid="structelement__parser__ctx_1aaefe108db499547ce5c51690e46c066c" prot="private" virt="non-virtual"><scope>element_parser_ctx</scope><name>validate_struct</name></member>
      <member refid="structelement__parser__ctx_1a31d6ed3c74fb275d0472a8e6c4c97dd9" prot="private" virt="non-virtual"><scope>element_parser_ctx</scope><name>validate_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
