<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="expression_8hpp" kind="file" language="C++">
    <compoundname>expression.hpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">string</includes>
    <includes refid="object__model_2fwd_8hpp" local="yes">object_model/fwd.hpp</includes>
    <includes refid="source__information_8hpp" local="yes">source_information.hpp</includes>
    <includedby refid="expression__chain_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp</includedby>
    <includedby refid="anonymous__block__expression_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/anonymous_block_expression.hpp</includedby>
    <includedby refid="call__expression_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/call_expression.hpp</includedby>
    <includedby refid="expression__chain_8cpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.cpp</includedby>
    <includedby refid="identifier__expression_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/identifier_expression.hpp</includedby>
    <includedby refid="indexing__expression_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/indexing_expression.hpp</includedby>
    <includedby refid="literal__expression_8hpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/literal_expression.hpp</includedby>
    <includedby refid="metainfo_8cpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp</includedby>
    <includedby refid="object__model__builder_8cpp" local="yes">/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/object_model_builder.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="6">
        <label>source_information.hpp</label>
        <link refid="source__information_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>object_model/fwd.hpp</label>
        <link refid="object__model_2fwd_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="1">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp</label>
        <link refid="expression__chain_8hpp_source"/>
      </node>
      <node id="7">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/literal_expression.hpp</label>
        <link refid="literal__expression_8hpp_source"/>
      </node>
      <node id="5">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/identifier_expression.hpp</label>
        <link refid="identifier__expression_8hpp_source"/>
      </node>
      <node id="4">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/call_expression.hpp</label>
        <link refid="call__expression_8hpp_source"/>
      </node>
      <node id="6">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/indexing_expression.hpp</label>
        <link refid="indexing__expression_8hpp_source"/>
      </node>
      <node id="3">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/anonymous_block_expression.hpp</label>
        <link refid="anonymous__block__expression_8hpp_source"/>
      </node>
      <node id="1">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classelement_1_1expression" prot="public">element::expression</innerclass>
    <innernamespace refid="namespaceelement">element</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//STD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//SELF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;object_model/fwd.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;source_information.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">element</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classelement_1_1expression" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classelement_1_1expression" kindref="compound">expression</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1expression__chain" kindref="compound">expression_chain</ref>*<sp/>parent)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent(parent)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(parent);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classelement_1_1expression" kindref="compound">expression</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>default<sp/>them<sp/>if<sp/>we<sp/>really<sp/>need<sp/>them,<sp/>but<sp/>it&apos;s<sp/>unlikely<sp/>given<sp/>it<sp/>should<sp/>be<sp/>wrapped<sp/>in<sp/>a<sp/>shared_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>(<ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;<sp/>operator=(<ref refid="classelement_1_1expression" kindref="compound">expression</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>to_code(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>object_const_shared_ptr<sp/>resolve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">*<sp/>obj)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classelement_1_1source__information" kindref="compound">source_information</ref><sp/>source_info;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1expression__chain" kindref="compound">expression_chain</ref>*<sp/>parent;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>element</highlight></codeline>
    </programlisting>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression.hpp"/>
  </compounddef>
</doxygen>
