<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classelement_1_1expression__chain" kind="class" language="C++" prot="public" final="yes">
    <compoundname>element::expression_chain</compoundname>
    <basecompoundref refid="classelement_1_1object" prot="public" virt="non-virtual">element::object</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classelement_1_1expression__chain_1a2aca5841962adc3f127f58a908f1b08f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> *</type>
        <definition>const declaration* element::expression_chain::declarer</definition>
        <argsstring></argsstring>
        <name>declarer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="25" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelement_1_1expression__chain_1a52275efbf30102c9b027154589df0806" prot="public" static="no" mutable="yes">
        <type><ref refid="classelement_1_1capture__stack" kindref="compound">capture_stack</ref></type>
        <definition>capture_stack element::expression_chain::captures</definition>
        <argsstring></argsstring>
        <name>captures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="26" column="31" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelement_1_1expression__chain_1af72f4fca42d4ed87156ad230c83d2bf0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classelement_1_1expression" kindref="compound">expression</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;expression&gt; &gt; element::expression_chain::expressions</definition>
        <argsstring></argsstring>
        <name>expressions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="27" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classelement_1_1expression__chain_1af9dfe01f3df6c63745de364fff71c7f0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>expression_chain::expression_chain</definition>
        <argsstring>(const declaration *declarer)</argsstring>
        <name>expression_chain</name>
        <param>
          <type>const <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> *</type>
          <declname>declarer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="13" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1expression__chain_1ab87ba15e95fb79558479c0bfda625712" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string expression_chain::typeof_info</definition>
        <argsstring>() const override</argsstring>
        <name>typeof_info</name>
        <reimplements refid="classelement_1_1object_1ad349d741b95f1a6fa5bbdd5188e8292b">typeof_info</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="15" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1expression__chain_1a5c369fc0c2a7f6601dac170bc565e858" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string expression_chain::to_code</definition>
        <argsstring>(const int depth=0) const override</argsstring>
        <name>to_code</name>
        <reimplements refid="classelement_1_1object_1a930429a343359aaf0cf603d251ca53a2">to_code</reimplements>
        <param>
          <type>const int</type>
          <declname>depth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="16" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1expression__chain_1a30ac7fcb874418252529ae143446bb9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr expression_chain::call</definition>
        <argsstring>(const compilation_context &amp;context, std::vector&lt; object_const_shared_ptr &gt; compiled_args, const source_information &amp;source_info) const override</argsstring>
        <name>call</name>
        <reimplements refid="classelement_1_1object_1af6dbeefad4c697ab757864ae78fd831e">call</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>std::vector&lt; object_const_shared_ptr &gt;</type>
          <declname>compiled_args</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="17" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1expression__chain_1a7da32a5ed91387104935d531c18a9da4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr expression_chain::compile</definition>
        <argsstring>(const compilation_context &amp;context, const source_information &amp;source_info) const override</argsstring>
        <name>compile</name>
        <reimplements refid="classelement_1_1object_1aa562aac5d1f233abda4a5348ac38da73">compile</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="21" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.cpp" bodystart="28" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1expression__chain_1a9f39e34d411c0961a3984a97e77be29f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
        <definition>const scope * expression_chain::get_scope</definition>
        <argsstring>() const override</argsstring>
        <name>get_scope</name>
        <reimplements refid="classelement_1_1object_1a410a20ebbac9643d6798ffa98a34ff17">get_scope</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="23" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>element::expression_chain</label>
        <link refid="classelement_1_1expression__chain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>element::expression_chain</label>
        <link refid="classelement_1_1expression__chain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>declarer</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>captures</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>element::capture_stack</label>
        <link refid="classelement_1_1capture__stack"/>
      </node>
      <node id="5">
        <label>element::identifier</label>
        <link refid="classelement_1_1identifier"/>
        <childnode refid="5" relation="usage">
          <edgelabel>list_at_identifier</edgelabel>
          <edgelabel>return_identifier</edgelabel>
          <edgelabel>list_count_identifier</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>element::declaration</label>
        <link refid="classelement_1_1declaration"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>element::source_information</label>
        <link refid="classelement_1_1source__information"/>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" line="11" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/expressions/expression_chain.hpp" bodystart="10" bodyend="30"/>
    <listofallmembers>
      <member refid="classelement_1_1expression__chain_1a30ac7fcb874418252529ae143446bb9b" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>call</name></member>
      <member refid="classelement_1_1expression__chain_1a52275efbf30102c9b027154589df0806" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>captures</name></member>
      <member refid="classelement_1_1expression__chain_1a7da32a5ed91387104935d531c18a9da4" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>compile</name></member>
      <member refid="classelement_1_1expression__chain_1a2aca5841962adc3f127f58a908f1b08f" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>declarer</name></member>
      <member refid="classelement_1_1expression__chain_1af9dfe01f3df6c63745de364fff71c7f0" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>expression_chain</name></member>
      <member refid="classelement_1_1expression__chain_1af72f4fca42d4ed87156ad230c83d2bf0" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>expressions</name></member>
      <member refid="classelement_1_1object_1a3452e5e30891e487707a7fb300f6465d" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>get_constraint</name></member>
      <member refid="classelement_1_1object_1a82a0020492785cb186c7d09ea88aa79d" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>get_inputs</name></member>
      <member refid="classelement_1_1object_1a17cca83a78581c5e8b73652f57910d1a" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>get_output</name></member>
      <member refid="classelement_1_1expression__chain_1a9f39e34d411c0961a3984a97e77be29f" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>get_scope</name></member>
      <member refid="classelement_1_1object_1a542266c49533b394c8f7668748f6424a" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>index</name></member>
      <member refid="classelement_1_1object_1ab44c28014a94092052f9cf9418eef340" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>is_constant</name></member>
      <member refid="classelement_1_1object_1a3ba311dae552affb306308617e394cf8" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>matches_constraint</name></member>
      <member refid="classelement_1_1object_1a0b77789880bc695115d2428b9b1f2fe6" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>object</name></member>
      <member refid="classelement_1_1object_1aecee67e856bcf56ecaee3848c3b834fe" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>object</name></member>
      <member refid="classelement_1_1object_1af31de89eb2a06fe7856ae3d8252fdd1b" prot="protected" virt="non-virtual"><scope>element::expression_chain</scope><name>object</name></member>
      <member refid="classelement_1_1object_1a05f452496fc2f14d4844fefe0326e5cd" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1aec74730c57e08a37dc6a61992e84e543" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1a8c377027f992c5b3440679941619c468" prot="public" virt="non-virtual"><scope>element::expression_chain</scope><name>source_info</name></member>
      <member refid="classelement_1_1expression__chain_1a5c369fc0c2a7f6601dac170bc565e858" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>to_code</name></member>
      <member refid="classelement_1_1object_1ac285622d5bdbf53d29ed531a7a50cd2a" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>to_instruction</name></member>
      <member refid="classelement_1_1object_1a1c22bf6d69ae19c71d6b2bd0cedfd675" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>to_string</name></member>
      <member refid="classelement_1_1expression__chain_1ab87ba15e95fb79558479c0bfda625712" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>typeof_info</name></member>
      <member refid="classelement_1_1object_1a9737ac6b6eef6c4e41d0a15ebf42762a" prot="public" virt="virtual"><scope>element::expression_chain</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
