<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="compilation__context_8cpp" kind="file" language="C++">
    <compoundname>compilation_context.cpp</compoundname>
    <includes refid="compilation__context_8hpp" local="yes">compilation_context.hpp</includes>
    <includes refid="function__declaration_8hpp" local="yes">declarations/function_declaration.hpp</includes>
    <includes refid="expression__chain_8hpp" local="yes">expressions/expression_chain.hpp</includes>
    <includes refid="intrinsic_8hpp" local="yes">intrinsics/intrinsic.hpp</includes>
    <includes refid="scope_8hpp" local="yes">scope.hpp</includes>
    <incdepgraph>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="17">
        <label>fmt/format.h</label>
      </node>
      <node id="38">
        <label>expressions/expression_chain.hpp</label>
        <link refid="expression__chain_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>element/ast.h</label>
      </node>
      <node id="30">
        <label>declarations/declaration.hpp</label>
        <link refid="declaration_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>variant</label>
      </node>
      <node id="20">
        <label>instruction_tree/fwd.hpp</label>
        <link refid="instruction__tree_2fwd_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>common_internal.hpp</label>
        <link refid="common__internal_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cassert</label>
      </node>
      <node id="28">
        <label>source_information.hpp</label>
        <link refid="source__information_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>compilation_context.hpp</label>
        <link refid="compilation__context_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="44">
        <label>ast_indexes.hpp</label>
        <link refid="ast__indexes_8hpp_source"/>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="8">
        <label>interpreter_internal.hpp</label>
        <link refid="interpreter__internal_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>element/common.h</label>
      </node>
      <node id="11">
        <label>element/interpreter.h</label>
      </node>
      <node id="18">
        <label>element/token.h</label>
      </node>
      <node id="1">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/compilation_context.cpp</label>
        <link refid="compilation__context_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="32">
        <label>declarations/function_declaration.hpp</label>
        <link refid="function__declaration_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>call_stack.hpp</label>
        <link refid="call__stack_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>fwd.hpp</label>
        <link refid="object__model_2fwd_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>identifier.hpp</label>
        <link refid="identifier_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utility</label>
      </node>
      <node id="43">
        <label>sstream</label>
      </node>
      <node id="25">
        <label>port.hpp</label>
        <link refid="port_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>capture_stack.hpp</label>
        <link refid="capture__stack_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>configuration.hpp</label>
      </node>
      <node id="24">
        <label>ast/fwd.hpp</label>
        <link refid="ast_2fwd_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>typeutil.hpp</label>
        <link refid="typeutil_8hpp_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>unordered_map</label>
      </node>
      <node id="42">
        <label>ast/ast_internal.hpp</label>
        <link refid="ast__internal_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>log_errors.hpp</label>
        <link refid="log__errors_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>type_traits</label>
      </node>
      <node id="22">
        <label>object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>object_model/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>intrinsics/intrinsic.hpp</label>
        <link refid="intrinsic_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_annotation.hpp</label>
        <link refid="type__annotation_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="39">
        <label>expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>object_model/constraints/constraint.hpp</label>
        <link refid="constraint_8hpp_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;compilation_context.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//SELF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;declarations/function_declaration.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;expressions/expression_chain.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;intrinsics/intrinsic.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scope.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">element;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">compilation_context::compilation_context(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1scope" kindref="compound">scope</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classelement_1_1scope" kindref="compound">scope</ref>,<sp/><ref refid="structelement__interpreter__ctx" kindref="compound">element_interpreter_ctx</ref>*<sp/>interpreter)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>interpreter(interpreter)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>global_scope{<sp/><ref refid="classelement_1_1scope" kindref="compound">scope</ref><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>compiler_scope(std::make_unique&lt;element::scope&gt;(global_scope,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>list_indexer<sp/>=<sp/>std::make_unique&lt;function_declaration&gt;(<ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>{<sp/></highlight><highlight class="stringliteral">&quot;@list_indexer&quot;</highlight><highlight class="normal"><sp/>},<sp/>compiler_scope.get(),<sp/>function_declaration::kind::intrinsic);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_port<sp/>=<sp/><ref refid="classelement_1_1port" kindref="compound">port</ref>(list_indexer.get(),<sp/><ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>{<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal"><sp/>},<sp/>std::make_unique&lt;type_annotation&gt;(<ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>{<sp/></highlight><highlight class="stringliteral">&quot;Num&quot;</highlight><highlight class="normal"><sp/>}),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>list_indexer-&gt;inputs.push_back(std::move(input_port));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>intrinsic::register_intrinsic&lt;function_declaration&gt;(interpreter,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>*list_indexer);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(success);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>body<sp/>=<sp/>intrinsic::get_intrinsic(interpreter,<sp/>*list_indexer);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(body);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>list_indexer-&gt;body<sp/>=<sp/>body;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>compiler_scope-&gt;add_declaration(std::move(list_indexer));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>list_fold_src<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list_fold(myList:List,<sp/>initial_value:Any,<sp/>someFunc:Binary):Any\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>end_of_list(tuple:Any):Bool<sp/>=<sp/>tuple.idx.lt(myList.count)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>accumulate(tuple:Any):Any<sp/>=<sp/>{idx<sp/>=<sp/>tuple.idx.add(1),<sp/>accumulated_value<sp/>=<sp/>someFunc(tuple.accumulated_value,<sp/>myList.at(tuple.idx))}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>return:Any<sp/>=<sp/>for({idx<sp/>=<sp/>0,<sp/>accumulated_value<sp/>=<sp/>initial_value},<sp/>end_of_list,<sp/>accumulate).accumulated_value\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;evaluate(a:Num,<sp/>b:Num,<sp/>c:Num,<sp/>start:Num):Num<sp/>=<sp/>list_fold(list(a,<sp/>b,<sp/>c),<sp/>start,<sp/>Num.add)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>interpreter-&gt;load_into_scope(list_fold_src,<sp/></highlight><highlight class="stringliteral">&quot;compiler_generated_list_fold&quot;</highlight><highlight class="normal">,<sp/>compiler_scope.get());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>compiler_scope-&gt;mark_declaration_compiler_generated(<ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>{<sp/></highlight><highlight class="stringliteral">&quot;list_fold&quot;</highlight><highlight class="normal"><sp/>});</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structelement__log__ctx" kindref="compound">element_log_ctx</ref>*<sp/>compilation_context::get_logger()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interpreter-&gt;logger.get();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/compilation_context.cpp"/>
  </compounddef>
</doxygen>
