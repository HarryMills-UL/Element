<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classelement_1_1scope" kind="class" language="C++" prot="public" final="yes">
    <compoundname>element::scope</compoundname>
    <basecompoundref refid="classelement_1_1object" prot="public" virt="non-virtual">element::object</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; scope &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classelement_1_1scope_1a2604822ce15f19e2237a36df2fc1413a" prot="private" static="no" mutable="no">
        <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
        <definition>const scope* element::scope::parent_scope</definition>
        <argsstring></argsstring>
        <name>parent_scope</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="38" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelement_1_1scope_1a7c3d233c6dfd8942c32271e1c0f9ef57" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>, std::unique_ptr&lt; <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> &gt; &gt;</type>
        <definition>std::map&lt;identifier, std::unique_ptr&lt;declaration&gt; &gt; element::scope::declarations</definition>
        <argsstring></argsstring>
        <name>declarations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="39" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classelement_1_1scope_1a55ad5a45bc22b96783424df6a87ff14d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scope::scope</definition>
        <argsstring>(const scope *parent_scope, const object *declaration_or_expression)</argsstring>
        <name>scope</name>
        <param>
          <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
          <declname>parent_scope</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1object" kindref="compound">object</ref> *</type>
          <declname>declaration_or_expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="16" column="9" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a7000b05037603af5550d58a88d3fbdbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> *</type>
        <definition>const declaration * scope::find</definition>
        <argsstring>(const identifier &amp;name, bool recurse) const</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recurse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="18" column="28" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1ad14ba45ea0654f6d1c7f08dd34966622" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool element::scope::is_root</definition>
        <argsstring>() const</argsstring>
        <name>is_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="19" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a7d4e28932908072c8d12b1f24024f331" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool element::scope::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="20" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1aab9588d9646efdda129cfb2bb29b5fc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
        <definition>const scope * scope::get_global</definition>
        <argsstring>() const</argsstring>
        <name>get_global</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="21" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a2b582208203e1e1ce052afe86e0bd3b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
        <definition>const scope* element::scope::get_parent_scope</definition>
        <argsstring>() const</argsstring>
        <name>get_parent_scope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="22" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1aa272f5fe3bffd923fbb3bd6a94245fa9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string scope::to_code</definition>
        <argsstring>(const int depth=-1) const override</argsstring>
        <name>to_code</name>
        <reimplements refid="classelement_1_1object_1a930429a343359aaf0cf603d251ca53a2">to_code</reimplements>
        <param>
          <type>const int</type>
          <declname>depth</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="25" column="22" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/metainfo.cpp" bodystart="254" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a0fd47a4e1b6ae41ccec952f8012b404a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scope::add_declaration</definition>
        <argsstring>(std::unique_ptr&lt; declaration &gt; declaration)</argsstring>
        <name>add_declaration</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> &gt;</type>
          <declname>declaration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="27" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1aee01759c190834e223051ff027b4d9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scope::remove_declaration</definition>
        <argsstring>(const identifier &amp;name)</argsstring>
        <name>remove_declaration</name>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="28" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a105c71c96af743c929a29dad19ef944e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>, std::unique_ptr&lt; <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> &gt; &gt; &amp;</type>
        <definition>const std::map&lt; identifier, std::unique_ptr&lt; declaration &gt; &gt; &amp; scope::get_declarations</definition>
        <argsstring>() const</argsstring>
        <name>get_declarations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="29" column="25" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1afe24e475c66400b0c506c41132e4be1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>element_result</type>
        <definition>element_result scope::merge</definition>
        <argsstring>(std::unique_ptr&lt; scope &gt; &amp;&amp;other)</argsstring>
        <name>merge</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classelement_1_1scope" kindref="compound">scope</ref> &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="30" column="24" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="17" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1scope_1a90a49b446fd0fa4a8a5dae2c388cba03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scope::mark_declaration_compiler_generated</definition>
        <argsstring>(const identifier &amp;)</argsstring>
        <name>mark_declaration_compiler_generated</name>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="32" column="14" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.cpp" bodystart="35" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>std::enable_shared_from_this&lt; scope &gt;</label>
      </node>
      <node id="1">
        <label>element::scope</label>
        <link refid="classelement_1_1scope"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::enable_shared_from_this&lt; scope &gt;</label>
      </node>
      <node id="1">
        <label>element::scope</label>
        <link refid="classelement_1_1scope"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>element::source_information</label>
        <link refid="classelement_1_1source__information"/>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" line="14" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/scope.hpp" bodystart="13" bodyend="40"/>
    <listofallmembers>
      <member refid="classelement_1_1scope_1a0fd47a4e1b6ae41ccec952f8012b404a" prot="public" virt="non-virtual"><scope>element::scope</scope><name>add_declaration</name></member>
      <member refid="classelement_1_1object_1af6dbeefad4c697ab757864ae78fd831e" prot="public" virt="virtual"><scope>element::scope</scope><name>call</name></member>
      <member refid="classelement_1_1object_1aa562aac5d1f233abda4a5348ac38da73" prot="public" virt="virtual"><scope>element::scope</scope><name>compile</name></member>
      <member refid="classelement_1_1scope_1a7c3d233c6dfd8942c32271e1c0f9ef57" prot="private" virt="non-virtual"><scope>element::scope</scope><name>declarations</name></member>
      <member refid="classelement_1_1scope_1a7000b05037603af5550d58a88d3fbdbb" prot="public" virt="non-virtual"><scope>element::scope</scope><name>find</name></member>
      <member refid="classelement_1_1object_1a3452e5e30891e487707a7fb300f6465d" prot="public" virt="virtual"><scope>element::scope</scope><name>get_constraint</name></member>
      <member refid="classelement_1_1scope_1a105c71c96af743c929a29dad19ef944e" prot="public" virt="non-virtual"><scope>element::scope</scope><name>get_declarations</name></member>
      <member refid="classelement_1_1scope_1aab9588d9646efdda129cfb2bb29b5fc6" prot="public" virt="non-virtual"><scope>element::scope</scope><name>get_global</name></member>
      <member refid="classelement_1_1object_1a82a0020492785cb186c7d09ea88aa79d" prot="public" virt="virtual"><scope>element::scope</scope><name>get_inputs</name></member>
      <member refid="classelement_1_1object_1a17cca83a78581c5e8b73652f57910d1a" prot="public" virt="virtual"><scope>element::scope</scope><name>get_output</name></member>
      <member refid="classelement_1_1scope_1a2b582208203e1e1ce052afe86e0bd3b7" prot="public" virt="non-virtual"><scope>element::scope</scope><name>get_parent_scope</name></member>
      <member refid="classelement_1_1object_1a410a20ebbac9643d6798ffa98a34ff17" prot="public" virt="virtual"><scope>element::scope</scope><name>get_scope</name></member>
      <member refid="classelement_1_1object_1a542266c49533b394c8f7668748f6424a" prot="public" virt="virtual"><scope>element::scope</scope><name>index</name></member>
      <member refid="classelement_1_1object_1ab44c28014a94092052f9cf9418eef340" prot="public" virt="virtual"><scope>element::scope</scope><name>is_constant</name></member>
      <member refid="classelement_1_1scope_1a7d4e28932908072c8d12b1f24024f331" prot="public" virt="non-virtual"><scope>element::scope</scope><name>is_empty</name></member>
      <member refid="classelement_1_1scope_1ad14ba45ea0654f6d1c7f08dd34966622" prot="public" virt="non-virtual"><scope>element::scope</scope><name>is_root</name></member>
      <member refid="classelement_1_1scope_1a90a49b446fd0fa4a8a5dae2c388cba03" prot="public" virt="non-virtual"><scope>element::scope</scope><name>mark_declaration_compiler_generated</name></member>
      <member refid="classelement_1_1object_1a3ba311dae552affb306308617e394cf8" prot="public" virt="virtual"><scope>element::scope</scope><name>matches_constraint</name></member>
      <member refid="classelement_1_1scope_1afe24e475c66400b0c506c41132e4be1c" prot="public" virt="non-virtual"><scope>element::scope</scope><name>merge</name></member>
      <member refid="classelement_1_1object_1a0b77789880bc695115d2428b9b1f2fe6" prot="public" virt="non-virtual"><scope>element::scope</scope><name>object</name></member>
      <member refid="classelement_1_1object_1aecee67e856bcf56ecaee3848c3b834fe" prot="public" virt="non-virtual"><scope>element::scope</scope><name>object</name></member>
      <member refid="classelement_1_1object_1af31de89eb2a06fe7856ae3d8252fdd1b" prot="protected" virt="non-virtual"><scope>element::scope</scope><name>object</name></member>
      <member refid="classelement_1_1object_1a05f452496fc2f14d4844fefe0326e5cd" prot="public" virt="non-virtual"><scope>element::scope</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1aec74730c57e08a37dc6a61992e84e543" prot="public" virt="non-virtual"><scope>element::scope</scope><name>operator=</name></member>
      <member refid="classelement_1_1scope_1a2604822ce15f19e2237a36df2fc1413a" prot="private" virt="non-virtual"><scope>element::scope</scope><name>parent_scope</name></member>
      <member refid="classelement_1_1scope_1aee01759c190834e223051ff027b4d9c8" prot="public" virt="non-virtual"><scope>element::scope</scope><name>remove_declaration</name></member>
      <member refid="classelement_1_1scope_1a55ad5a45bc22b96783424df6a87ff14d" prot="public" virt="non-virtual"><scope>element::scope</scope><name>scope</name></member>
      <member refid="classelement_1_1object_1a8c377027f992c5b3440679941619c468" prot="public" virt="non-virtual"><scope>element::scope</scope><name>source_info</name></member>
      <member refid="classelement_1_1scope_1aa272f5fe3bffd923fbb3bd6a94245fa9" prot="public" virt="virtual"><scope>element::scope</scope><name>to_code</name></member>
      <member refid="classelement_1_1object_1ac285622d5bdbf53d29ed531a7a50cd2a" prot="public" virt="virtual"><scope>element::scope</scope><name>to_instruction</name></member>
      <member refid="classelement_1_1object_1a1c22bf6d69ae19c71d6b2bd0cedfd675" prot="public" virt="virtual"><scope>element::scope</scope><name>to_string</name></member>
      <member refid="classelement_1_1object_1ad349d741b95f1a6fa5bbdd5188e8292b" prot="public" virt="virtual"><scope>element::scope</scope><name>typeof_info</name></member>
      <member refid="classelement_1_1object_1a9737ac6b6eef6c4e41d0a15ebf42762a" prot="public" virt="virtual"><scope>element::scope</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
