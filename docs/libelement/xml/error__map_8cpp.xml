<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="error__map_8cpp" kind="file" language="C++">
    <compoundname>error_map.cpp</compoundname>
    <includes refid="error__map_8hpp" local="yes">error_map.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="7">
        <label>fmt/format.h</label>
      </node>
      <node id="24">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>error_map.hpp</label>
        <link refid="error__map_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>declarations/declaration.hpp</label>
        <link refid="declaration_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>variant</label>
      </node>
      <node id="17">
        <label>instruction_tree/fwd.hpp</label>
        <link refid="instruction__tree_2fwd_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>common_internal.hpp</label>
        <link refid="common__internal_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="25">
        <label>compilation_context.hpp</label>
        <link refid="compilation__context_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>source_information.hpp</label>
        <link refid="source__information_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="28">
        <label>interpreter_internal.hpp</label>
        <link refid="interpreter__internal_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>element/common.h</label>
      </node>
      <node id="30">
        <label>element/interpreter.h</label>
      </node>
      <node id="15">
        <label>element/token.h</label>
      </node>
      <node id="10">
        <label>optional</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="34">
        <label>declarations/function_declaration.hpp</label>
        <link refid="function__declaration_8hpp_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>call_stack.hpp</label>
        <link refid="call__stack_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>fwd.hpp</label>
        <link refid="object__model_2fwd_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>identifier.hpp</label>
        <link refid="identifier_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="19">
        <label>port.hpp</label>
        <link refid="port_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>capture_stack.hpp</label>
        <link refid="capture__stack_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>configuration.hpp</label>
      </node>
      <node id="11">
        <label>ast/fwd.hpp</label>
        <link refid="ast_2fwd_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="37">
        <label>typeutil.hpp</label>
        <link refid="typeutil_8hpp_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>unordered_map</label>
      </node>
      <node id="1">
        <label>/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/error_map.cpp</label>
        <link refid="error__map_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>object_model/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>type_annotation.hpp</label>
        <link refid="type__annotation_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="36">
        <label>object_model/constraints/constraint.hpp</label>
        <link refid="constraint_8hpp_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;error_map.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>element::detail::register_errors()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registered_errors<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registered_errors)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>registered_errors;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>registered_errors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::not_indexable,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>index<sp/>&apos;{}&apos;,<sp/>it<sp/>is<sp/>not<sp/>indexable.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_NOT_INDEXABLE);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::not_callable,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>call<sp/>&apos;{}&apos;,<sp/>it<sp/>is<sp/>not<sp/>callable.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_INVALID_CALL_NONFUNCTION);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::not_compilable,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>compile<sp/>&apos;{}&apos;,<sp/>it<sp/>is<sp/>not<sp/>compilable.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_UNKNOWN);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>not<sp/>currently<sp/>used,<sp/>try<sp/>and<sp/>be<sp/>more<sp/>specific<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::failed_to_find,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>find<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_IDENTIFIER_NOT_FOUND);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::failed_to_find_when_resolving_indexing_expr,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>find<sp/>&apos;{}&apos;<sp/>when<sp/>indexing<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_IDENTIFIER_NOT_FOUND);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::failed_to_find_when_resolving_identifier_expr,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>find<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_IDENTIFIER_NOT_FOUND);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::recursion_detected,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>at<sp/>&apos;{}&apos;.<sp/>recursion<sp/>detected.\n{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_CIRCULAR_COMPILATION);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::instance_function_cannot_be_nullary,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;{}&apos;<sp/>was<sp/>found<sp/>when<sp/>indexing<sp/>&apos;{}&apos;<sp/>but<sp/>it<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>function.\nnote:<sp/>the<sp/>function<sp/>has<sp/>no<sp/>parameters.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_CANNOT_BE_USED_AS_INSTANCE_FUNCTION);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::is_not_an_instance_function,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;{}&apos;<sp/>was<sp/>found<sp/>when<sp/>indexing<sp/>&apos;{}&apos;<sp/>but<sp/>it<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>function.\nnote:<sp/>the<sp/>function<sp/>does<sp/>not<sp/>have<sp/>an<sp/>explicit<sp/>type<sp/>defined<sp/>for<sp/>its<sp/>first<sp/>parameter<sp/>&apos;{}&apos;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_CANNOT_BE_USED_AS_INSTANCE_FUNCTION);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string,<sp/>std::string,<sp/>std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::is_not_an_instance_function,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;{}&apos;<sp/>was<sp/>found<sp/>when<sp/>indexing<sp/>&apos;{}&apos;<sp/>but<sp/>it<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>function.\nnote:<sp/>the<sp/>first<sp/>parameter<sp/>&apos;{}&apos;<sp/>is<sp/>of<sp/>type<sp/>&apos;{}&apos;.<sp/>the<sp/>first<sp/>parameter<sp/>needs<sp/>to<sp/>be<sp/>&apos;{}&apos;<sp/>for<sp/>this<sp/>to<sp/>be<sp/>considered<sp/>an<sp/>instance<sp/>function.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_CANNOT_BE_USED_AS_INSTANCE_FUNCTION);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>std::string,<sp/>std::string&gt;(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::argument_count_mismatch,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;attempted<sp/>to<sp/>construct<sp/>an<sp/>instance<sp/>of<sp/>&apos;{}&apos;<sp/>which<sp/>requires<sp/>the<sp/>parameters<sp/>&apos;{}&apos;,<sp/>but<sp/>the<sp/>parameters<sp/>of<sp/>type<sp/>&apos;{}&apos;<sp/>were<sp/>used<sp/>instead.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_ARGUMENT_COUNT_MISMATCH);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//expand<sp/>on<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;&gt;(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::intrinsic_not_implemented,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;intrinsic<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_INTRINSIC_NOT_IMPLEMENTED);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>size_t,<sp/>size_t&gt;(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::not_enough_arguments,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>call<sp/>to<sp/>&apos;{0}&apos;<sp/>does<sp/>not<sp/>contain<sp/>enough<sp/>arguments.\nnote:<sp/>&apos;{0}&apos;<sp/>was<sp/>called<sp/>with<sp/>{1}<sp/>arguments,<sp/>when<sp/>{2}<sp/>arguments<sp/>were<sp/>expected.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_ARGUMENT_COUNT_MISMATCH);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;std::string,<sp/>size_t,<sp/>size_t&gt;(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::too_many_arguments,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>call<sp/>to<sp/>&apos;{0}&apos;<sp/>contains<sp/>too<sp/>many<sp/>arguments.\nnote:<sp/>&apos;{0}&apos;<sp/>was<sp/>called<sp/>with<sp/>{1}<sp/>arguments,<sp/>when<sp/>{2}<sp/>arguments<sp/>were<sp/>expected.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_ARGUMENT_COUNT_MISMATCH);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>element::register_error&lt;&gt;(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_message_code::invalid_errorless_call,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>call<sp/>to<sp/>&apos;{}&apos;<sp/>caused<sp/>an<sp/>internal<sp/>compiler<sp/>error.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELEMENT_ERROR_UNKNOWN);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>registered_errors;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/error_map.cpp"/>
  </compounddef>
</doxygen>
