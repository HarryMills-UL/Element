<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classelement_1_1capture__stack" kind="class" language="C++" prot="public">
    <compoundname>element::capture_stack</compoundname>
    <innerclass refid="structelement_1_1capture__stack_1_1frame" prot="public">element::capture_stack::frame</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classelement_1_1capture__stack_1ab4356cbf6b5b24ecab3a0e8d4c71b5b6" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structelement_1_1capture__stack_1_1frame" kindref="compound">frame</ref> &gt;</type>
        <definition>std::vector&lt;frame&gt; element::capture_stack::frames</definition>
        <argsstring></argsstring>
        <name>frames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="32" column="21" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classelement_1_1capture__stack_1ad376a19d942f5701ec96e2fe1b0f26e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>element::capture_stack::capture_stack</definition>
        <argsstring>()=default</argsstring>
        <name>capture_stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1capture__stack_1a9411806490ee4a8a03d313df3ae1e92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void capture_stack::push</definition>
        <argsstring>(const scope *local_scope, const std::vector&lt; port &gt; *parameters, std::vector&lt; object_const_shared_ptr &gt; compiled_arguments)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
          <declname>local_scope</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classelement_1_1port" kindref="compound">port</ref> &gt; *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>std::vector&lt; object_const_shared_ptr &gt;</type>
          <declname>compiled_arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="23" column="14" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1capture__stack_1aa9647e768ffeb18d85d51e8297a7e8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void capture_stack::push</definition>
        <argsstring>(const declaration &amp;declaration, std::vector&lt; object_const_shared_ptr &gt; compiled_arguments)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="classelement_1_1declaration" kindref="compound">declaration</ref> &amp;</type>
          <declname>declaration</declname>
        </param>
        <param>
          <type>std::vector&lt; object_const_shared_ptr &gt;</type>
          <declname>compiled_arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="24" column="14" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1capture__stack_1ada97e6c404bb128fea760672d14bcdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void capture_stack::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="25" column="14" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1capture__stack_1afd6e47ddbeb65aa46ad584ef41ca1969" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr capture_stack::find</definition>
        <argsstring>(const scope *local_scope, const identifier &amp;name, const compilation_context &amp;context, const source_information &amp;source_info) const</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classelement_1_1scope" kindref="compound">scope</ref> *</type>
          <declname>local_scope</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="26" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.cpp" bodystart="25" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" line="12" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/capture_stack.hpp" bodystart="11" bodyend="33"/>
    <listofallmembers>
      <member refid="classelement_1_1capture__stack_1ad376a19d942f5701ec96e2fe1b0f26e6" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>capture_stack</name></member>
      <member refid="classelement_1_1capture__stack_1afd6e47ddbeb65aa46ad584ef41ca1969" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>find</name></member>
      <member refid="classelement_1_1capture__stack_1ab4356cbf6b5b24ecab3a0e8d4c71b5b6" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>frames</name></member>
      <member refid="classelement_1_1capture__stack_1ada97e6c404bb128fea760672d14bcdcc" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>pop</name></member>
      <member refid="classelement_1_1capture__stack_1a9411806490ee4a8a03d313df3ae1e92f" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>push</name></member>
      <member refid="classelement_1_1capture__stack_1aa9647e768ffeb18d85d51e8297a7e8d2" prot="public" virt="non-virtual"><scope>element::capture_stack</scope><name>push</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
