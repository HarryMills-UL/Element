<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classelement_1_1anonymous__block__instance" kind="class" language="C++" prot="public" final="yes">
    <compoundname>element::anonymous_block_instance</compoundname>
    <basecompoundref refid="classelement_1_1object" prot="public" virt="non-virtual">element::object</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; anonymous_block_instance &gt;</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classelement_1_1anonymous__block__instance_1acb996fe84b906ef7fc92132033ed5997" prot="public" static="no" mutable="no">
        <type>const <ref refid="classelement_1_1anonymous__block__expression" kindref="compound">anonymous_block_expression</ref> *const</type>
        <definition>const anonymous_block_expression* const element::anonymous_block_instance::declarer</definition>
        <argsstring></argsstring>
        <name>declarer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="27" column="48" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelement_1_1anonymous__block__instance_1a81f3a02bab315586a26c6a14344d8d1b" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, object_const_shared_ptr &gt;</type>
        <definition>std::map&lt;std::string, object_const_shared_ptr&gt; element::anonymous_block_instance::fields</definition>
        <argsstring></argsstring>
        <name>fields</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="28" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1a231f0cdcba4656808760b9121d9f467e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>anonymous_block_instance::anonymous_block_instance</definition>
        <argsstring>(const anonymous_block_expression *declarer, const std::map&lt; identifier, object_const_shared_ptr &gt; &amp;named_expressions, source_information source_info)</argsstring>
        <name>anonymous_block_instance</name>
        <param>
          <type>const <ref refid="classelement_1_1anonymous__block__expression" kindref="compound">anonymous_block_expression</ref> *</type>
          <declname>declarer</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref>, object_const_shared_ptr &gt; &amp;</type>
          <declname>named_expressions</declname>
        </param>
        <param>
          <type><ref refid="classelement_1_1source__information" kindref="compound">source_information</ref></type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="12" column="18" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="16" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1a95f42c98d917bdc5951482befc279126" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool element::anonymous_block_instance::is_constant</definition>
        <argsstring>() const override</argsstring>
        <name>is_constant</name>
        <reimplements refid="classelement_1_1object_1ab44c28014a94092052f9cf9418eef340">is_constant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="16" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1af42a77a0d159ffa096f4118a4d342a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool anonymous_block_instance::matches_constraint</definition>
        <argsstring>(const compilation_context &amp;context, const constraint *constraint) const override</argsstring>
        <name>matches_constraint</name>
        <reimplements refid="classelement_1_1object_1a3ba311dae552affb306308617e394cf8">matches_constraint</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1constraint" kindref="compound">constraint</ref> *</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="17" column="15" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1ad8050aece4826fe6636541eff52c8909" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classelement_1_1constraint" kindref="compound">constraint</ref> *</type>
        <definition>const constraint * anonymous_block_instance::get_constraint</definition>
        <argsstring>() const override</argsstring>
        <name>get_constraint</name>
        <reimplements refid="classelement_1_1object_1a3452e5e30891e487707a7fb300f6465d">get_constraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="18" column="27" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1a0dbdb796b56e0f2bf7e5d8cf001350c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr anonymous_block_instance::index</definition>
        <argsstring>(const compilation_context &amp;context, const identifier &amp;name, const source_information &amp;source_info) const</argsstring>
        <name>index</name>
        <reimplements refid="classelement_1_1object_1a542266c49533b394c8f7668748f6424a">index</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1identifier" kindref="compound">identifier</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="20" column="42" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="45" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classelement_1_1anonymous__block__instance_1a0c638d1a201287d9bed5b55738702b07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>object_const_shared_ptr</type>
        <definition>object_const_shared_ptr anonymous_block_instance::compile</definition>
        <argsstring>(const compilation_context &amp;context, const source_information &amp;source_info) const override</argsstring>
        <name>compile</name>
        <reimplements refid="classelement_1_1object_1aa562aac5d1f233abda4a5348ac38da73">compile</reimplements>
        <param>
          <type>const <ref refid="classelement_1_1compilation__context" kindref="compound">compilation_context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classelement_1_1source__information" kindref="compound">source_information</ref> &amp;</type>
          <declname>source_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="24" column="34" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>element::anonymous_block_instance</label>
        <link refid="classelement_1_1anonymous__block__instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; anonymous_block_instance &gt;</label>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>element::anonymous_block_instance</label>
        <link refid="classelement_1_1anonymous__block__instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>declarer</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>element::expression_chain</label>
        <link refid="classelement_1_1expression__chain"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>declarer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>captures</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>element::capture_stack</label>
        <link refid="classelement_1_1capture__stack"/>
      </node>
      <node id="6">
        <label>element::expression</label>
        <link refid="classelement_1_1expression"/>
        <childnode refid="7" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>element::anonymous_block_expression</label>
        <link refid="classelement_1_1anonymous__block__expression"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; anonymous_block_instance &gt;</label>
      </node>
      <node id="9">
        <label>element::identifier</label>
        <link refid="classelement_1_1identifier"/>
        <childnode refid="9" relation="usage">
          <edgelabel>list_at_identifier</edgelabel>
          <edgelabel>return_identifier</edgelabel>
          <edgelabel>list_count_identifier</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>element::object</label>
        <link refid="classelement_1_1object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>source_info</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>element::declaration</label>
        <link refid="classelement_1_1declaration"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>element::source_information</label>
        <link refid="classelement_1_1source__information"/>
      </node>
    </collaborationgraph>
    <location file="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" line="10" column="1" bodyfile="/Users/harry.mills/Documents/Repos/Element/libelement/src/object_model/intermediaries/anonymous_block_instance.hpp" bodystart="9" bodyend="32"/>
    <listofallmembers>
      <member refid="classelement_1_1anonymous__block__instance_1a231f0cdcba4656808760b9121d9f467e" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>anonymous_block_instance</name></member>
      <member refid="classelement_1_1object_1af6dbeefad4c697ab757864ae78fd831e" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>call</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1a0c638d1a201287d9bed5b55738702b07" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>compile</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1acb996fe84b906ef7fc92132033ed5997" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>declarer</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1a81f3a02bab315586a26c6a14344d8d1b" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>fields</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1ad8050aece4826fe6636541eff52c8909" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>get_constraint</name></member>
      <member refid="classelement_1_1object_1a82a0020492785cb186c7d09ea88aa79d" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>get_inputs</name></member>
      <member refid="classelement_1_1object_1a17cca83a78581c5e8b73652f57910d1a" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>get_output</name></member>
      <member refid="classelement_1_1object_1a410a20ebbac9643d6798ffa98a34ff17" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>get_scope</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1a0dbdb796b56e0f2bf7e5d8cf001350c9" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>index</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1a95f42c98d917bdc5951482befc279126" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>is_constant</name></member>
      <member refid="classelement_1_1anonymous__block__instance_1af42a77a0d159ffa096f4118a4d342a99" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>matches_constraint</name></member>
      <member refid="classelement_1_1object_1a0b77789880bc695115d2428b9b1f2fe6" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1aecee67e856bcf56ecaee3848c3b834fe" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1af31de89eb2a06fe7856ae3d8252fdd1b" prot="protected" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>object</name></member>
      <member refid="classelement_1_1object_1a05f452496fc2f14d4844fefe0326e5cd" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1aec74730c57e08a37dc6a61992e84e543" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>operator=</name></member>
      <member refid="classelement_1_1object_1a8c377027f992c5b3440679941619c468" prot="public" virt="non-virtual"><scope>element::anonymous_block_instance</scope><name>source_info</name></member>
      <member refid="classelement_1_1object_1a930429a343359aaf0cf603d251ca53a2" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>to_code</name></member>
      <member refid="classelement_1_1object_1ac285622d5bdbf53d29ed531a7a50cd2a" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>to_instruction</name></member>
      <member refid="classelement_1_1object_1a1c22bf6d69ae19c71d6b2bd0cedfd675" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>to_string</name></member>
      <member refid="classelement_1_1object_1ad349d741b95f1a6fa5bbdd5188e8292b" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>typeof_info</name></member>
      <member refid="classelement_1_1object_1a9737ac6b6eef6c4e41d0a15ebf42762a" prot="public" virt="virtual"><scope>element::anonymous_block_instance</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
